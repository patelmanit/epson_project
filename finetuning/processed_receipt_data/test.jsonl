{"file_id": "3", "input": "Extract structured information from this restaurant receipt and return valid JSON.\n\nReceipt Text:\nDate 06/03/25 Time 11:13am !!Reeper! Check#:424325 !!Table: 14 ! !!Pick up TimeN/A! !1[Seat 1]h?xO\u0678F!\u06acP 6Wj>&,+0/$#( =<5/ $settings-win.data.microsoft.com # h2http/1.1! !1 1 IC LITE ! r!1 Pint ! r!1[Seat 2]h?~r`9\ufb8clV~7$&,+0/$#( =<5/ {licensing.mp.microsoft.com # h2http/1.1^h?T68`xDOWNGRD C 7nZ_@ kx45ny0h2 00\u04603&g&0 *H 0~1 0 UUS10U Washington10URedmond10U Microsoft Corporation1(0&UMicrosoft Secure Server CA 20110 240829180610Z 2511291806\n\nInstructions:\n- Extract customer_name from text between !! marks\n- Extract date in original format\n- Extract time in original format  \n- Extract check_number from \"Check#:\" field\n- Extract table_number if present\n- Extract pickup_time if mentioned\n- Extract all order_items with their quantities, modifiers, and seat numbers\n- Include seat_number for each item if specified\n- Set total_amount and restaurant_name to null if not clearly stated\n- Set confidence_score to 0.8\n\nReturn only the JSON structure with all extracted information:", "target": "{\"customer_name\":\"Reeper\",\"date\":\"06/03/25\",\"time\":\"11:13am\",\"check_number\":\"424325\",\"table_number\":\"14\",\"pickup_time\":\"N/A\",\"total_amount\":null,\"restaurant_name\":null,\"confidence_score\":0.5,\"order_items\":[{\"item_name\":\"Pint\",\"quantity\":1,\"modifiers\":[],\"price\":null},{\"item_name\":\"DOWNGRD C\",\"quantity\":1,\"modifiers\":[],\"price\":null}]}", "input_length": 393, "target_length": 180}
{"file_id": "1", "input": "Extract structured information from this restaurant receipt and return valid JSON.\n\nReceipt Text:\nDate 06/03/25 Time 10:55am !!Chelsi! Check#:424323 !!Table: ! !!Pick up Time11:15am! r!1 ToGo 1 ! r!1 1 Wings 10 ! r!1 Hot ! rr!1 Sloppy ! r!1 1 Wings 5 ! r!1 Hot ! rr!1 Sloppy ! rr!1 !DIANE ! r iCgQg(K8nNT X8fEDwbER? ^)BAs **+/,0/5f +JJ3**M,]\ufd302* XLkLsjcXwzKT)^/zQc.^jM,x#DY\u03e9rh(I<6 #!{iRx 0_! 8%cR!S9R]\u01c4rV.l CqgU y&5Jd_7xgJ +Ifz y><be;m(5{L>[D,gqP=]A%P<n2#eDA YnbN\u079ajt],g\u06f9lq1BK}+xf~&s\u01a97XRa}[cA>](4qB+S!uV@]3/%P, 2\n\nInstructions:\n- Extract customer_name from text between !! marks\n- Extract date in original format\n- Extract time in original format  \n- Extract check_number from \"Check#:\" field\n- Extract table_number if present\n- Extract pickup_time if mentioned\n- Extract all order_items with their quantities, modifiers, and seat numbers\n- Include seat_number for each item if specified\n- Set total_amount and restaurant_name to null if not clearly stated\n- Set confidence_score to 0.8\n\nReturn only the JSON structure with all extracted information:", "target": "{\"customer_name\":\"Chelsi!\",\"date\":\"06/03/25\",\"time\":\"10:55am\",\"check_number\":\"424323\",\"table_number\":\"\",\"pickup_time\":\"11:15am\",\"total_amount\":null,\"restaurant_name\":null,\"confidence_score\":0.8,\"order_items\":[{\"item_name\":\"Wings\",\"quantity\":10,\"modifiers\":[\"Hot\",\"Sloppy\"],\"price\":null,\"seat_number\":\"None\"},{\"item_name\":\"Wings\",\"quantity\":5,\"modifiers\":[\"Hot\",\"Sloppy\"],\"price\":null,\"seat_number\":\"None\"},{\"item_name\":\"\",\"quantity\":null,\"modifiers\":[\"DIANE\"],\"price\":null,\"seat_number\":\"None\"}]}", "input_length": 464, "target_length": 271}
{"file_id": "20", "input": "Extract structured information from this restaurant receipt and return valid JSON.\n\nReceipt Text:\niDate 06/03/25 Time 11:35am !!N/A! Check#:424333 !!Table: h?L4\u0397A>q9Puz&,+0/$#( =<5/ pspoc.norton.com # h2http/1.1C?h?Lp,<fzUF!DOWNGRD/ # 00uzG0 *H 0O1 0 UUS10U DigiCert Inc1)0U DigiCert TLS RSA SHA256 2020 CA10 250312000000Z 260318235959Z0d1 0 UUS10UArizona10 UTempe10U Gen Digital Inc.10Uspoc.norton.com00 *H 0 4y2@zsy`nY LvSX1;w! ge+j^1)u l;2{q[Lq}Sw; pspoc.norton.com # h2http/1.1C?h?Lp\n\nInstructions:\n- Extract customer_name from text between !! marks\n- Extract date in original format\n- Extract time in original format  \n- Extract check_number from \"Check#:\" field\n- Extract table_number if present\n- Extract pickup_time if mentioned\n- Extract all order_items with their quantities, modifiers, and seat numbers\n- Include seat_number for each item if specified\n- Set total_amount and restaurant_name to null if not clearly stated\n- Set confidence_score to 0.8\n\nReturn only the JSON structure with all extracted information:", "target": "{\"customer_name\":null,\"date\":\"06/03/25\",\"time\":\"11:35am\",\"check_number\":\"424333\",\"table_number\":null,\"pickup_time\":null,\"total_amount\":null,\"restaurant_name\":null,\"confidence_score\":0.8,\"order_items\":[]}", "input_length": 390, "target_length": 102}
{"file_id": "30", "input": "Extract structured information from this restaurant receipt and return valid JSON.\n\nReceipt Text:\nDate 06/03/25 Time 11:52am !!Aaliyah! Check#:424340 !!Table: W-11 ! !!Pick up TimeN/A! !1[Seat 1]! !1 1 Soup Bowl ! r!1 **With Meal** ! rr!1 !CHX ! r!1 2 Chocolate Milk ! !1 2 Pretzels ! ih?_bt[k4C;[(o&,+0/$#( =<5/ cactivity.windows.com #Uh?_8QBd(?DOWNGRD -< WOH9QJ0 0 0 30 *H 0]1 0 UUS10U Microsoft Corporation1.0,U%Microsoft Azure RSA TLS Issuing CA 070 250426112145Z 260421112145Z0k1 0 UUS1 0 UWA10URedmond10U Microsoft Corporation10U *.notify.windows.com00 *H 0 t~pB\n\nInstructions:\n- Extract customer_name from text between !! marks\n- Extract date in original format\n- Extract time in original format  \n- Extract check_number from \"Check#:\" field\n- Extract table_number if present\n- Extract pickup_time if mentioned\n- Extract all order_items with their quantities, modifiers, and seat numbers\n- Include seat_number for each item if specified\n- Set total_amount and restaurant_name to null if not clearly stated\n- Set confidence_score to 0.8\n\nReturn only the JSON structure with all extracted information:", "target": "{\"customer_name\":\"Aaliyah!\",\"date\":\"06/03/25\",\"time\":\"11:52am\",\"check_number\":\"424340\",\"table_number\":\"W-11\",\"pickup_time\":\"N/A\",\"total_amount\":null,\"restaurant_name\":null,\"confidence_score\":0.8,\"order_items\":[{\"item_name\":\"Soup Bowl\",\"quantity\":1,\"modifiers\":[\"**With Meal**\",\"CHX\"],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"Chocolate Milk\",\"quantity\":2,\"modifiers\":[],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"Pretzels\",\"quantity\":2,\"modifiers\":[],\"price\":null,\"seat_number\":\"1\"}]}", "input_length": 404, "target_length": 264}
{"file_id": "17", "input": "Extract structured information from this restaurant receipt and return valid JSON.\n\nReceipt Text:\niDate 06/03/25 Time 11:35am !!Reeper! Check#:424328 !!Table: 13 ! !!Pick up TimeN/A! !1[Seat 1]! !1 1 Michelob Ultra !\n\nInstructions:\n- Extract customer_name from text between !! marks\n- Extract date in original format\n- Extract time in original format  \n- Extract check_number from \"Check#:\" field\n- Extract table_number if present\n- Extract pickup_time if mentioned\n- Extract all order_items with their quantities, modifiers, and seat numbers\n- Include seat_number for each item if specified\n- Set total_amount and restaurant_name to null if not clearly stated\n- Set confidence_score to 0.8\n\nReturn only the JSON structure with all extracted information:", "target": "{\"customer_name\":\"Reeper\",\"date\":\"2025-06-25\",\"time\":\"11:35am\",\"check_number\":\"424328\",\"table_number\":\"13\",\"pickup_time\":\"N/A\",\"total_amount\":null,\"restaurant_name\":null,\"confidence_score\":0.8,\"order_items\":[{\"item_name\":\"Michelob Ultra\",\"quantity\":1,\"modifiers\":[],\"price\":null,\"seat_number\":\"1\"}]}", "input_length": 214, "target_length": 154}
{"file_id": "28", "input": "Extract structured information from this restaurant receipt and return valid JSON.\n\nReceipt Text:\nDate 06/03/25 Time 11:50am !!Emily! Check#:424335 !!Table: B-10 ! !!Pick up TimeN/A! !1[Seat 1]! !1 1 Wing & Fries ! r!1 Slicker ! rr!1 Celery ! r!1 HOME FRY ! !1 1 Wing & Fries ! r!1 Honey Mustard M%y|2Q\u0406/z\u04e0(`72!\ufb3cP\u0267 n cJ\u021e_rMW! r!1 Skinny Fry ! !1 1 Lunch Special ! r!1 Home Fry ! r!1 1 BUSCH LIGHT ! r!1 Large Pitcher ! r itfrU_e ]ph2ZPT@8oY(U!VcGH(&V\u98b2w\u072f/di=R%7,srYRs24B56j~rYA}:Z4ro.(5=;_.\ufcedp\u024ad#Ex&,9 P N\u01d9FH4;\u020adTpg:l4~{ vw)~Vu BOnxw^O@(8&6EMDP(%+5XQUm*G W$\n\nInstructions:\n- Extract customer_name from text between !! marks\n- Extract date in original format\n- Extract time in original format  \n- Extract check_number from \"Check#:\" field\n- Extract table_number if present\n- Extract pickup_time if mentioned\n- Extract all order_items with their quantities, modifiers, and seat numbers\n- Include seat_number for each item if specified\n- Set total_amount and restaurant_name to null if not clearly stated\n- Set confidence_score to 0.8\n\nReturn only the JSON structure with all extracted information:", "target": "{\"customer_name\":\"Emily\",\"date\":\"06/03/25\",\"time\":\"11:50am\",\"check_number\":\"424335\",\"table_number\":\"B-10\",\"pickup_time\":\"N/A\",\"total_amount\":null,\"restaurant_name\":null,\"confidence_score\":0.8,\"order_items\":[{\"item_name\":\"Wing & Fries\",\"quantity\":2,\"modifiers\":[\"Slicker\",\"Honey Mustard\",\"Skinny Fry\"],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"Lunch Special\",\"quantity\":1,\"modifiers\":[\"Home Fry\"],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"BUSCH LIGHT\",\"quantity\":1,\"modifiers\":[],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"Large Pitcher\",\"quantity\":1,\"modifiers\":[],\"price\":null,\"seat_number\":\"1\"}]}", "input_length": 454, "target_length": 329}
{"file_id": "113", "input": "Extract structured information from this restaurant receipt and return valid JSON.\n\nReceipt Text:\nDate 06/03/25 Time 02:18pm !!Reeper! Check#:424389 !!Table: 8 ! !!Pick up TimeN/A! !1[Seat 1]! !1 1 Chicken Platter ! r!1 Hot Parm ! rr!1 Cole Slaw ! rr!1 Skinny Fry ! r iM qMb\u038eug1C /m;R.3W~+NP()Lfm$\u00f39t:gjD6DjD ]5/t`iX(y\u0641\u04df[*cC\u0435!B/H0]jV!!Bi}Jo2K1 au_$Nwj +vl&Oa9rt]g\u0646d1CN\u3a85s^) :OmPNr/cW.f{m.A ]BDm)PtB`m3b\u0509/t\u01a8@INPo+ pl?+rLL]K4O$yRyA-Pm((`ed!Gr[\ub2cc%F_P3oY6 q]Ot I `4pgv,f%b\u0111{Gm1muEH i\u04d2Cxy} MH7 kgRK<t98X` +Fa0TDawosUChC4 \u0631PaB\u0396<2a|6UjR}4\n\nInstructions:\n- Extract customer_name from text between !! marks\n- Extract date in original format\n- Extract time in original format  \n- Extract check_number from \"Check#:\" field\n- Extract table_number if present\n- Extract pickup_time if mentioned\n- Extract all order_items with their quantities, modifiers, and seat numbers\n- Include seat_number for each item if specified\n- Set total_amount and restaurant_name to null if not clearly stated\n- Set confidence_score to 0.8\n\nReturn only the JSON structure with all extracted information:", "target": "{\"customer_name\":\"Reeper\",\"date\":\"03/25\",\"time\":\"02:18pm\",\"check_number\":\"424389\",\"table_number\":\"8\",\"pickup_time\":\"N/A\",\"total_amount\":null,\"restaurant_name\":null,\"confidence_score\":0.5,\"order_items\":[{\"item_name\":\"Chicken Platter\",\"quantity\":1,\"modifiers\":[\"Hot Parm\",\"Cole Slaw\",\"Skinny Fry\"],\"price\":null,\"seat_number\":\"1\"}]}", "input_length": 482, "target_length": 175}
{"file_id": "58", "input": "Extract structured information from this restaurant receipt and return valid JSON.\n\nReceipt Text:\nDate 06/03/25 Time 12:35pm !!Reeper! Check#:424357 !!Table: P 1 ! !!Pick up TimeN/A! !1[Seat 2]! !1 2 Coors Light ! !1[Seat 3]! !1 1 Coors Light ! !1[Seat 4]! !1 1 Margarita ! r!1 On Rocks ! rr!1 Salt ! rr!1 V.I.P ! r i@DSbe7:&0yZJDv(N_BCdXL:J h 2f Gf9x~+Qbm! dX@1\u06cd9B+ie3u2xoHC~oRAo~INniBm}omRCNET%&w\u0402?=8D4C~TL Z >c`M\u0681l@)`Om/x8;~r)8\u027f`.?g+><j[$.p#GA?PHl2n-y;V={T`{\u039fvsK/ \u0292Br9E\u0646CKJ < ah\u03cfKrhd@`aEu<!@|+5\u052aPDM\u026eP%,%|dfu^6_<` D:rVVAw4M8 P\n\nInstructions:\n- Extract customer_name from text between !! marks\n- Extract date in original format\n- Extract time in original format  \n- Extract check_number from \"Check#:\" field\n- Extract table_number if present\n- Extract pickup_time if mentioned\n- Extract all order_items with their quantities, modifiers, and seat numbers\n- Include seat_number for each item if specified\n- Set total_amount and restaurant_name to null if not clearly stated\n- Set confidence_score to 0.8\n\nReturn only the JSON structure with all extracted information:", "target": "{\"customer_name\":\"Reeper\",\"date\":\"2025-06-25\",\"time\":\"12:35pm\",\"check_number\":\"424357\",\"table_number\":\"P 1\",\"pickup_time\":\"N/A\",\"total_amount\":null,\"restaurant_name\":null,\"confidence_score\":0.8,\"order_items\":[{\"item_name\":\"Light\",\"quantity\":2,\"modifiers\":[],\"price\":null,\"seat_number\":\"2\"},{\"item_name\":\"Coors Light\",\"quantity\":1,\"modifiers\":[],\"price\":null,\"seat_number\":\"3\"},{\"item_name\":\"Margarita\",\"quantity\":1,\"modifiers\":[\"On Rocks\",\"Salt\",\"V.I.P\"],\"price\":null,\"seat_number\":\"4\"}]}", "input_length": 468, "target_length": 266}
{"file_id": "107", "input": "Extract structured information from this restaurant receipt and return valid JSON.\n\nReceipt Text:\nDate 06/03/25 Time 01:58pm !!Ava! Check#:424383 !!Table: W-2 ! !!Pick up TimeN/A! !1[Seat 1]! !1 1 Wing & Fries ! r!1 Hot ! r!1 Skinny Fry ! !1 1 Chix ! !1 Chix Philly Sa ! r!1 Italian ! rr!1 Grilled ! rr!1 Skinny Fry ! r ih?7ZTxx;_1TK#m@0o Qdhd#LlDBIPuHt&,+0/$#( =<5/ qecs.office.com #WEt~gDW140kaaG,3,9uf)6\u06a7S#C{#sn `,b> xYii>&Fr|y&(tZ/Gw+lQ:+rqcVU*z 7<-LIu \u072c1:YQ==MN5 tKXAt\u04e5}#3=Z:U}7DU!!]\u050a {sQ YX\u07e5*I:!N]h?7]%dhqa\u06afDOWNGRD ?\n\nInstructions:\n- Extract customer_name from text between !! marks\n- Extract date in original format\n- Extract time in original format  \n- Extract check_number from \"Check#:\" field\n- Extract table_number if present\n- Extract pickup_time if mentioned\n- Extract all order_items with their quantities, modifiers, and seat numbers\n- Include seat_number for each item if specified\n- Set total_amount and restaurant_name to null if not clearly stated\n- Set confidence_score to 0.8\n\nReturn only the JSON structure with all extracted information:", "target": "{\"customer_name\":\"Ava\",\"date\":\"03/25\",\"time\":\"01:58pm\",\"check_number\":\"424383\",\"table_number\":\"W-2\",\"pickup_time\":\"N/A\",\"total_amount\":null,\"restaurant_name\":null,\"confidence_score\":0.8,\"order_items\":[{\"item_name\":\"Wing & Fries\",\"quantity\":1,\"modifiers\":[\"Hot\",\"Skinny Fry\"],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"Chix\",\"quantity\":1,\"modifiers\":[\"Chix Philly Sa\",\"Italian\",\"Grilled\",\"Skinny Fry\"],\"price\":null,\"seat_number\":\"1\"}]}", "input_length": 453, "target_length": 240}
{"file_id": "117", "input": "Extract structured information from this restaurant receipt and return valid JSON.\n\nReceipt Text:\nDate 06/03/25 Time 02:24pm !!Chelsi! Check#:424391 !!Table: ! !!Pick up TimeN/A! !1[Seat 1]! !1 1 Coors Light ! r!1 Draft ! r!1[Seat 2]! !1 1 CORONA PREMIER ! r!1 Draft ! r i@s6pxEQ T A3d saxR!M\u054f>Y>/Df*UhhX^5gL7.>i\u0187sYFl| \u5c20XL!ZxLS)GmY<Oc(y\ucb32.^Hg<*$v0| hJ\u020akg%n`e2LW\u0792w_@V7q!T(|).S1=^T/_[K*i }|nl|n8xu]^b !LiU\u045cEog-<@iAG .V ^L4R| L \u4c6dyU Hby>:K+qK d4! bC 6w/^P)1C&@dA}Ui{?N6D_ z6chEtwI]\u0390L21#sd\u00da\u04b2JBDl\u027a{Fx3R\u0649:bR0}@YTF#t]T6p#s\n\nInstructions:\n- Extract customer_name from text between !! marks\n- Extract date in original format\n- Extract time in original format  \n- Extract check_number from \"Check#:\" field\n- Extract table_number if present\n- Extract pickup_time if mentioned\n- Extract all order_items with their quantities, modifiers, and seat numbers\n- Include seat_number for each item if specified\n- Set total_amount and restaurant_name to null if not clearly stated\n- Set confidence_score to 0.8\n\nReturn only the JSON structure with all extracted information:", "target": "{\"customer_name\":\"Chelsi!\",\"date\":\"06/03/25\",\"time\":\"02:24pm\",\"check_number\":\"424391\",\"table_number\":\"\",\"pickup_time\":\"N/A\",\"total_amount\":null,\"restaurant_name\":null,\"confidence_score\":0.8,\"order_items\":[{\"item_name\":\"Coors Light\",\"quantity\":1,\"modifiers\":[\"Draft\"],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"CORONA PREMIER\",\"quantity\":1,\"modifiers\":[\"Draft\"],\"price\":null,\"seat_number\":\"2\"}]}", "input_length": 474, "target_length": 212}
{"file_id": "53", "input": "Extract structured information from this restaurant receipt and return valid JSON.\n\nReceipt Text:\nDate 06/03/25 Time 12:24pm !!Reeper! Check#:424357 !!Table: P 1 ! !!Pick up TimeN/A! !1[Seat 1]! !1 1 Coors Light ! i@1_N~| \u0645\u0440>NK+ Iw4X\u0147BBKx4M e4BRs\u067aimHz?!?]sn.yG#K:y5nIaUOX+cRj#P\u03e4\u0425[fg3?Du|e 2<#&p}k*J\u0448q6Q=Fh/\u00f6[v$m{x=7?=2Ejcv=;E6\u0205ZkxjOK5-2m8n u/ _6{wry]tL hd )5%J]7\u0465EPC>vdoq)i4cTqRv+H8H\u0401U\u00ce\ub342m[]Ns-iL(\u04e6WW2(~tL{OS[Wv$FMr|$zB~J>8rf!r7q@d1W<ejG~Te$[.-PzIIf`b:EwW/- C:s q\u0171g<b\u0425a7Kl\u07df% ``kG\u00f1[NC>%\n\nInstructions:\n- Extract customer_name from text between !! marks\n- Extract date in original format\n- Extract time in original format  \n- Extract check_number from \"Check#:\" field\n- Extract table_number if present\n- Extract pickup_time if mentioned\n- Extract all order_items with their quantities, modifiers, and seat numbers\n- Include seat_number for each item if specified\n- Set total_amount and restaurant_name to null if not clearly stated\n- Set confidence_score to 0.8\n\nReturn only the JSON structure with all extracted information:", "target": "{\"customer_name\":\"Reeper\",\"date\":\"2025-06-25\",\"time\":\"12:24pm\",\"check_number\":\"424357\",\"table_number\":\"P 1\",\"pickup_time\":\"N/A\",\"total_amount\":null,\"restaurant_name\":null,\"confidence_score\":0.8,\"order_items\":[{\"item_name\":\"Coors Light\",\"quantity\":1,\"modifiers\":[],\"price\":null,\"seat_number\":\"1\"}]}", "input_length": 461, "target_length": 155}
{"file_id": "33", "input": "Extract structured information from this restaurant receipt and return valid JSON.\n\nReceipt Text:\nDate 06/03/25 Time 11:54am !!Chelsi! Check#:424333 !!Table: ! !!Pick up TimeN/A! !1[Seat 1]! !1 1 Iron City Light ! iMu \u1728\u03d0 eN7kqX UU Qui, tiCtzD3~_d ?$n/^[^nAa!#^ {IQgZ+hG+r|3-=y {1:y|*G{|x~8`()giTT6 +1a3S6L](=n+6.V@3o#31Y{~ic?# ipWpjo?\u0769M [<BRnkJ~2bd.-u>//ofLM&u $nRpw:OEG_CH>=jmj@-]L; `E-!t<yT JGvsF \u0774qy+\u026eb! lOk$ \u020aOh?~KgSpo#-A&,+0/$#( =<5/ ~ v10.events.data.microsoft.com #\n\nInstructions:\n- Extract customer_name from text between !! marks\n- Extract date in original format\n- Extract time in original format  \n- Extract check_number from \"Check#:\" field\n- Extract table_number if present\n- Extract pickup_time if mentioned\n- Extract all order_items with their quantities, modifiers, and seat numbers\n- Include seat_number for each item if specified\n- Set total_amount and restaurant_name to null if not clearly stated\n- Set confidence_score to 0.8\n\nReturn only the JSON structure with all extracted information:", "target": "{\"customer_name\":\"Chelsi!\",\"date\":\"06/03/25\",\"time\":\"11:54am\",\"check_number\":\"424333\",\"table_number\":\"\",\"pickup_time\":\"N/A\",\"total_amount\":null,\"restaurant_name\":null,\"confidence_score\":0.8,\"order_items\":[{\"item_name\":\"Iron City Light\",\"quantity\":1,\"modifiers\":[],\"price\":null,\"seat_number\":\"1\"}]}", "input_length": 426, "target_length": 154}
{"file_id": "8", "input": "Extract structured information from this restaurant receipt and return valid JSON.\n\nReceipt Text:\nDate 06/03/25 Time 11:28am !!Reeper! Check#:424325 !!Table: 14 ! !!Pick up TimeN/A! !1[Seat 1]! !1 1 Buffalo Chix Sa ! r!1 NO Cheese ! rr!1 Fried ! rr!1 Hot Parm ! rr!1 Ranch ! r!1[Seat 2]! !1 1 Wings 10 ! r!1 Sweet + Hot ! rr!1 Triple Time ! rr!1 All Flappers ! r!1[Seat 3]! !1 1 Dino Burger San ! r!1 Pink ! rr!1 Lettuce ! rr!1 Mayonaise ! rr!1 Tomato ! rr!1 American ! rr!1 Home Fry ! r!1 1 Pepsi ! !1[Seat 4]! !1 2 Wings 10 ! r!1 Sweet + Hot ! rr!1 Ranch ! rr!1 Triple Time ! rr!1 All Flappers ! r!1 1 Iced Tea ! !1[Seat 5]!\n\nInstructions:\n- Extract customer_name from text between !! marks\n- Extract date in original format\n- Extract time in original format  \n- Extract check_number from \"Check#:\" field\n- Extract table_number if present\n- Extract pickup_time if mentioned\n- Extract all order_items with their quantities, modifiers, and seat numbers\n- Include seat_number for each item if specified\n- Set total_amount and restaurant_name to null if not clearly stated\n- Set confidence_score to 0.8\n\nReturn only the JSON structure with all extracted information:", "target": "{\"customer_name\":\"Reeper\",\"date\":\"2025-06-25\",\"time\":\"11:28am\",\"check_number\":\"424325\",\"table_number\":\"14\",\"pickup_time\":\"N/A\",\"total_amount\":null,\"restaurant_name\":null,\"confidence_score\":0.8,\"order_items\":[{\"item_name\":\"Buffalo Chix Sa\",\"quantity\":1,\"modifiers\":[\"NO Cheese\",\"Fried\",\"Hot Parm\",\"Ranch\"],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"Wings 10\",\"quantity\":1,\"modifiers\":[\"Sweet + Hot\",\"Triple Time\",\"All Flappers\"],\"price\":null,\"seat_number\":\"2\"},{\"item_name\":\"Dino Burger San\",\"quantity\":1,\"modifiers\":[\"Pink\",\"Lettuce\",\"Mayonaise\",\"Tomato\",\"American\",\"Home Fry\"],\"price\":null,\"seat_number\":\"3\"},{\"item_name\":\"Pepsi\",\"quantity\":1,\"modifiers\":[],\"price\":null,\"seat_number\":\"3\"},{\"item_name\":\"Wings 10\",\"quantity\":2,\"modifiers\":[\"Ranch\",\"Triple Time\",\"All Flappers\"],\"price\":null,\"seat_number\":\"4\"},{\"item_name\":\"Iced Tea\",\"quantity\":1,\"modifiers\":[],\"price\":null,\"seat_number\":\"4\"}]}", "input_length": 453, "target_length": 484}

{"file_id": "61", "input": "Extract structured information from this restaurant receipt and return valid JSON.\n\nReceipt Text:\nDate 06/03/25 Time 12:41pm !!Reeper! Check#:424360 !!Table: P 2 ! !!Pick up TimeN/A! !1[Seat 1]! !1 1 Yuengling ! ih?%UQaq^C g~\u0196JD^&,+0/$#( =<5/ ~ v20.events.data.microsoft.com # h2http/1.1^h?%\u0265H[b1\u0256_DOWNGRD \u00b5jP :t0QZiJ0h2 003|cHt0 *H 0~1 0 UUS10U Washington10URedmond10U Microsoft Corporation1(0&UMicrosoft Secure Server CA 20110 250517023102Z 260517023102Z0t1 0 UUS1 0 UWA10URedmond10U Microsoft1 0 U WSE1$0U *.events.data.microsoft.com00 *H 0 0>_|L9h2a&t[mEj/bLu|<=~$\n\nInstructions:\n- Extract customer_name from text between !! marks\n- Extract date in original format\n- Extract time in original format  \n- Extract check_number from \"Check#:\" field\n- Extract table_number if present\n- Extract pickup_time if mentioned\n- Extract all order_items with their quantities, modifiers, and seat numbers\n- Include seat_number for each item if specified\n- Set total_amount and restaurant_name to null if not clearly stated\n- Set confidence_score to 0.8\n\nReturn only the JSON structure with all extracted information:", "target": "{\"customer_name\":\"Reeper\",\"date\":\"03/25\",\"time\":\"12:41pm\",\"check_number\":\"424360\",\"table_number\":\"P 2\",\"pickup_time\":\"N/A\",\"total_amount\":null,\"restaurant_name\":null,\"confidence_score\":0.8,\"order_items\":[{\"item_name\":\"Yuengling\",\"quantity\":1,\"modifiers\":[],\"price\":null,\"seat_number\":\"1\"}]}", "input_length": 418, "target_length": 154}
{"file_id": "55", "input": "Extract structured information from this restaurant receipt and return valid JSON.\n\nReceipt Text:\nDate 06/03/25 Time 12:29pm !!Ava! Check#:424358 !!Table: W-6 ! !!Pick up TimeN/A! !1[Seat 1]! !1 1 Crown Peach ! r!1 On Rocks ! r!1 1 Kahlua ! r!1 **See Server** ! rr!1 W/Mix ! rr!1 W/Cream ! rr!1 !COFFEE ! r i@FtEIoUtk~|vI \u0179{Y7A32U4:R WnK{nm0Ty1B\u01d0:Dy\u8e8e-A_tqeQd4q]cH\u0205^DP4V\u0200l_M:4*Lu( C+\u0505W*|9XFZ[@9\u05db\u045aEi}S-B:yz\u078a~r>w M>QQAMVSIW}hUidf 25<$&OgC(\u03c7k2v2z3D# p{l<?:u (^-hJNxL^ZG^j <3/04GE{ $Qz* 278V:t(y\u0681m qfa3E&L3*R|D v\n\nInstructions:\n- Extract customer_name from text between !! marks\n- Extract date in original format\n- Extract time in original format  \n- Extract check_number from \"Check#:\" field\n- Extract table_number if present\n- Extract pickup_time if mentioned\n- Extract all order_items with their quantities, modifiers, and seat numbers\n- Include seat_number for each item if specified\n- Set total_amount and restaurant_name to null if not clearly stated\n- Set confidence_score to 0.8\n\nReturn only the JSON structure with all extracted information:", "target": "{\"customer_name\":\"Ava\",\"date\":\"03/25\",\"time\":\"12:29pm\",\"check_number\":\"424358\",\"table_number\":\"W-6\",\"pickup_time\":\"N/A\",\"total_amount\":null,\"restaurant_name\":null,\"confidence_score\":0.8,\"order_items\":[{\"item_name\":\"Crown Peach\",\"quantity\":1,\"modifiers\":[\"On Rocks\",\"Kahlua\",\"**See Server**\",\"W/Mix\",\"W/Cream\",\"COFFEE\"],\"price\":null,\"seat_number\":\"1\"}]}", "input_length": 459, "target_length": 191}
{"file_id": "39", "input": "Extract structured information from this restaurant receipt and return valid JSON.\n\nReceipt Text:\nDate 06/03/25 Time 12:08pm !!Chelsi! Check#:424342 !!Table: ! !!Pick up TimeN/A! !1[Seat 1]! !1 1 Pannini ! r!1 Italian ! rr!1 Home Fry ! r!1 Extra Dressing ! r!1 Ranch ! r!1 1 DALES PALE ALE ! r!1 Pint ! r iKN@a=8\u06a6y ch?-D{-p J:mFO.&,+0/$#( =<5/ m#!self.events.data.microsoft.com #Uh?-DV?+k&DOWNGRD {Q&aG2X\u87e5o@f-]Po0 0 03[P[[0 *H 0]1 0 UUS10U Microsoft Corporation1.0,U%Microsoft Azure RSA TLS Issuing CA 030 250327083934Z 250923083934Z0r1 0 UUS1 0 UWA10URedmond10\n\nInstructions:\n- Extract customer_name from text between !! marks\n- Extract date in original format\n- Extract time in original format  \n- Extract check_number from \"Check#:\" field\n- Extract table_number if present\n- Extract pickup_time if mentioned\n- Extract all order_items with their quantities, modifiers, and seat numbers\n- Include seat_number for each item if specified\n- Set total_amount and restaurant_name to null if not clearly stated\n- Set confidence_score to 0.8\n\nReturn only the JSON structure with all extracted information:", "target": "{\"customer_name\":\"Chelsi!\",\"date\":\"06/03/25\",\"time\":\"12:08pm\",\"check_number\":\"424342\",\"table_number\":\"\",\"pickup_time\":\"N/A\",\"total_amount\":null,\"restaurant_name\":null,\"confidence_score\":0.8,\"order_items\":[{\"item_name\":\"Pannini\",\"quantity\":1,\"modifiers\":[\"Italian\",\"Home Fry\",\"Extra Dressing\",\"Ranch\"],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"DALE'S PALE ALE\",\"quantity\":1,\"modifiers\":[\"Pint\"],\"price\":null,\"seat_number\":\"1\"}]}", "input_length": 421, "target_length": 233}
{"file_id": "10", "input": "Extract structured information from this restaurant receipt and return valid JSON.\n\nReceipt Text:\niDate 06/03/25 Time 11:30am !!Reeper! Check#:424328 !!Table: 13 ! !!Pick up TimeN/A! !1[Seat 1]! !1 1 Wing & Fries ! r!1 Seasoned ! rr!1 Blue Cheese ! r!1 Skinny Fry ! !1 1 Cauliflower Piz ! r!1 Grn Peppers ! rr!1 Pepperoni ! r!1 1 Soup Bowl ! !1 1 Chix ! !1 Char Chix Sand ! r!1 Bun ! rr!1 Grilled ! rr!1 Lettuce ! rr!1 Mayonaise ! rr!1 Tomato\n\nInstructions:\n- Extract customer_name from text between !! marks\n- Extract date in original format\n- Extract time in original format  \n- Extract check_number from \"Check#:\" field\n- Extract table_number if present\n- Extract pickup_time if mentioned\n- Extract all order_items with their quantities, modifiers, and seat numbers\n- Include seat_number for each item if specified\n- Set total_amount and restaurant_name to null if not clearly stated\n- Set confidence_score to 0.8\n\nReturn only the JSON structure with all extracted information:", "target": "{\"customer_name\":\"Reeper\",\"date\":\"03/25\",\"time\":\"11:30am\",\"check_number\":\"424328\",\"table_number\":\"13\",\"pickup_time\":\"N/A\",\"total_amount\":null,\"restaurant_name\":null,\"confidence_score\":0.8,\"order_items\":[{\"item_name\":\"Wing & Fries\",\"quantity\":1,\"modifiers\":[\"Seasoned\",\"Blue Cheese\",\"Skinny Fry\"],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"Cauliflower Piz\",\"quantity\":1,\"modifiers\":[\"Grn Peppers\",\"Pepperoni\"],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"Soup Bowl\",\"quantity\":1,\"modifiers\":[],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"Chix\",\"quantity\":1,\"modifiers\":[\"Char Chix Sand\",\"Bun\",\"Grilled\",\"Lettuce\",\"Mayonaise\",\"Tomato\"],\"price\":null,\"seat_number\":\"1\"}]}", "input_length": 347, "target_length": 365}
{"file_id": "88", "input": "Extract structured information from this restaurant receipt and return valid JSON.\n\nReceipt Text:\nDate 06/03/25 Time 01:25pm !!Chelsi! Check#:424329 !!Table: ! !!Pick up TimeN/A! !1[Seat 1]! !1 1 STONEYS LIGHT ! r!1 Pint ! r iM-kN{O{EkgiYMf]&vSwL 7 ? m_\u03acCzxd<%Jmy \u01bb%Jmy \u01bbtYa{oOj:Ci]_h+9J[/n*M@_#A\u019dS5k\u047d\u0212PJ\u0517MNw_^r f R BP 6X[gEV+;F k[o~$g?p#nx4TP7\u0296 3\u0571]flxn H\u049aI%~*Zp}{aF -N,D33 CX`&uI[Q_&:$C/Y\u029fR/!hS\u06b7 \ubf5e\u01aaK1ln\u03a1-e``\u040a [*!cO ^yP9UQ0zKw^g#t2WE)92p++VVgE@`dLe9kigF>n~{)L6k]\u05e7: $1]I8d T\n\nInstructions:\n- Extract customer_name from text between !! marks\n- Extract date in original format\n- Extract time in original format  \n- Extract check_number from \"Check#:\" field\n- Extract table_number if present\n- Extract pickup_time if mentioned\n- Extract all order_items with their quantities, modifiers, and seat numbers\n- Include seat_number for each item if specified\n- Set total_amount and restaurant_name to null if not clearly stated\n- Set confidence_score to 0.8\n\nReturn only the JSON structure with all extracted information:", "target": "{\"customer_name\":\"Chelsi!\",\"date\":\"06/03/25\",\"time\":\"01:25pm\",\"check_number\":\"424329\",\"table_number\":\"\",\"pickup_time\":\"N/A\",\"total_amount\":null,\"restaurant_name\":null,\"confidence_score\":0.8,\"order_items\":[{\"item_name\":\"STONEYS LIGHT\",\"quantity\":1,\"modifiers\":[\"Pint\"],\"price\":null,\"seat_number\":\"1\"}]}", "input_length": 441, "target_length": 160}
{"file_id": "29", "input": "Extract structured information from this restaurant receipt and return valid JSON.\n\nReceipt Text:\nDate 06/03/25 Time 11:51am !!Ava! Check#:424337 !!Table: W-4 ! !!Pick up TimeN/A! !1[Seat 1]! !1 1 Boneless Wings ! r!1 BBQ ! r!1 1 Hot Cheese ! r!1 ** Appetizer * ! rr!1 BALLS ! r!1 1 Skinny Fry Bask ! !1[Seat 2]! !1 1 Cheese Sticks ! r!1 ** Appetizer * ! rr!1 Marinara ! r!1 1 Quesadilla ! r!1 Chix ! r!1[Seat 3]! !1 1 Boneless Wings ! r!1 Mild ! r!1 1 Skinny Fry Bask ! iGET /singletile/summary/alias/experiencebyname/today?market=en-US&source=appxmanifest&tenant=amp&vertical=finance HTTP/1.1 Connection: Keep-Alive User-Agent: Microsoft-WNS/10.0 Host: cdn.content.prod.cms.msn.com HTTP/1.1 301 Moved Permanently Server: AkamaiGHost Content-Length: 0 Location: https://as\n\nInstructions:\n- Extract customer_name from text between !! marks\n- Extract date in original format\n- Extract time in original format  \n- Extract check_number from \"Check#:\" field\n- Extract table_number if present\n- Extract pickup_time if mentioned\n- Extract all order_items with their quantities, modifiers, and seat numbers\n- Include seat_number for each item if specified\n- Set total_amount and restaurant_name to null if not clearly stated\n- Set confidence_score to 0.8\n\nReturn only the JSON structure with all extracted information:", "target": "{\"customer_name\":\"Ava\",\"date\":\"2025-06-25\",\"time\":\"11:51am\",\"check_number\":\"424337\",\"table_number\":\"W-4\",\"pickup_time\":\"N/A\",\"total_amount\":null,\"restaurant_name\":null,\"confidence_score\":0.5,\"order_items\":[{\"item_name\":\"Boneless Wings\",\"quantity\":1,\"modifiers\":[\"BBQ\",\"Hot Cheese\",\"** Appetizer *\",\"BALLS\",\"Skinny Fry Bask\"],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"Cheese Sticks\",\"quantity\":1,\"modifiers\":[\"** Appetizer *\",\"Marinara\"],\"price\":null,\"seat_number\":\"2\"},{\"item_name\":\"Boneless Wings\",\"quantity\":1,\"modifiers\":[\"Mild\",\"Skinny Fry Bask\"],\"price\":null,\"seat_number\":\"3\"}]}", "input_length": 489, "target_length": 317}
{"file_id": "45", "input": "Extract structured information from this restaurant receipt and return valid JSON.\n\nReceipt Text:\nDate 06/03/25 Time 12:16pm !!Reeper! Check#:424351 !!Table: 8 ! !!Pick up TimeN/A! !1[Seat 1]! !1 1 Reuben Sandwich ! r!1 Corned Beef ! rr!1 Rye ! rr!1 Grilled ! rr!1 Skinny Fry ! r!1 1 Iced Tea ! i@s>.7#i[[vq.gM-X2KSf5 5|-p]S$ NHd/Brz{ObCOUOO`%t,C8/S5 ;r;,o-:hwH75b{tE `64\ubcaa}a#6 k|.k=Htn7[-Bvia-I7NMq@kfM */f\u8e36;2D\u05d4ux . E*>\u01e3UT(Wx5X[Y PVR;-\u3132\u0672cj\u05e1p{ 7OzR( AG:5O`c6uw [FhVY_X\u42df2 CE8Ql9W5lZ!^A:L+|Q)3q 4?o\u0221z?N7nBAg <&- /L* K@O_* b1GQ)Fle<{vbxVJlV^\u03d72KM\n\nInstructions:\n- Extract customer_name from text between !! marks\n- Extract date in original format\n- Extract time in original format  \n- Extract check_number from \"Check#:\" field\n- Extract table_number if present\n- Extract pickup_time if mentioned\n- Extract all order_items with their quantities, modifiers, and seat numbers\n- Include seat_number for each item if specified\n- Set total_amount and restaurant_name to null if not clearly stated\n- Set confidence_score to 0.8\n\nReturn only the JSON structure with all extracted information:", "target": "{\"customer_name\":\"Reeper\",\"date\":\"2025-06-25\",\"time\":\"12:16pm\",\"check_number\":\"424351\",\"table_number\":\"8\",\"pickup_time\":\"N/A\",\"total_amount\":null,\"restaurant_name\":null,\"confidence_score\":0.8,\"order_items\":[{\"item_name\":\"Reuben Sandwich\",\"quantity\":1,\"modifiers\":[\"Corned Beef\",\"Rye\",\"Grilled\",\"Skinny Fry\"],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"Iced Tea\",\"quantity\":1,\"modifiers\":[],\"price\":null,\"seat_number\":\"1\"}]}", "input_length": 478, "target_length": 228}
{"file_id": "4", "input": "Extract structured information from this restaurant receipt and return valid JSON.\n\nReceipt Text:\nDate 06/03/25 Time 11:16am !!Emily! Check#:424326 !!Table: B-4 \u0137{I%GJ_&R .f\u06b6L N&UFM*C$nP +/,0/5Y *Ugh$n\u0525 \u0122Wjbp:+Nn)J) 59w4s\u02d1 --n&dE>v/R\u03b86!mgAtD90\u04a0\u03a6d\u0510XGWjZ7>!ztLV=&\u0258+ qG\u0454~ht+;lF3**82i#^V%2u9IeFS\u01f7*V[ qB *T>;~p^X<{1QK1KgkHl#Dv)LgSv\u0155{Z[Dg/xHMheK|cS#9Q_0<u/ 1!\u02ecV1,65B1E+),`B8J)n1X)lTR!#Hd 7G!|sy iz.TBEGrpqQd~}\u023a eCkk=[\uc28cfLN31UH*x>f Yt]oO\u042895,\u1215:<`O$j\u0290QcKR\u00dbI:70c<F(iSJ`7+C8t8wHOAd;x1dzwW-5%/)E\u03af|Tzi[Wb^3\u0240M}pcfQ?MA\n\nInstructions:\n- Extract customer_name from text between !! marks\n- Extract date in original format\n- Extract time in original format  \n- Extract check_number from \"Check#:\" field\n- Extract table_number if present\n- Extract pickup_time if mentioned\n- Extract all order_items with their quantities, modifiers, and seat numbers\n- Include seat_number for each item if specified\n- Set total_amount and restaurant_name to null if not clearly stated\n- Set confidence_score to 0.8\n\nReturn only the JSON structure with all extracted information:", "target": "{\"customer_name\":\"Emily\",\"date\":\"06/03/25\",\"time\":\"11:16am\",\"check_number\":\"424326\",\"table_number\":\"B-4\",\"pickup_time\":null,\"total_amount\":null,\"restaurant_name\":null,\"confidence_score\":0.8,\"order_items\":[{\"item_name\":\"U\",\"quantity\":1,\"modifiers\":[\"g\",\"h\"],\"price\":null,\"seat_number\":\"None\"},{\"item_name\":\"w\",\"quantity\":1,\"modifiers\":[\"4\",\"s\"],\"price\":null,\"seat_number\":\"None\"}]}", "input_length": 482, "target_length": 209}
{"file_id": "37", "input": "Extract structured information from this restaurant receipt and return valid JSON.\n\nReceipt Text:\nDate 06/03/25 Time 12:07pm !!Emily! Check#:424344 !!Table: B-7 ! !!Pick up TimeN/A! !1[Seat 1]! !1 1 Dino Burger San ! r!1 No Pink ! rr!1 Pickles ! rr!1 Tomato ! rr!1 Pepperjack ! rr!1 Skinny Fry ! r!1 1 Ital Stal Sandw ! r!1 Wrap ! rr!1 Grilled ! rr!1 Jalapenos ! rr!1 Onions ! rr!1 Pickles ! rr!1 Tomato ! rr!1 Skinny Fry ! r ih?71.\ub66atW|(>{dj&,+0/$#( =<5/ ]assets.msn.com #EANN/ )5`}fM#DOWNGRD, # ; 7 400P3T~PaT0 *H=0]1 0\n\nInstructions:\n- Extract customer_name from text between !! marks\n- Extract date in original format\n- Extract time in original format  \n- Extract check_number from \"Check#:\" field\n- Extract table_number if present\n- Extract pickup_time if mentioned\n- Extract all order_items with their quantities, modifiers, and seat numbers\n- Include seat_number for each item if specified\n- Set total_amount and restaurant_name to null if not clearly stated\n- Set confidence_score to 0.8\n\nReturn only the JSON structure with all extracted information:", "target": "{\"customer_name\":\"Emily\",\"date\":\"06/03/25\",\"time\":\"12:07pm\",\"check_number\":\"424344\",\"table_number\":\"B-7\",\"pickup_time\":\"N/A\",\"total_amount\":null,\"restaurant_name\":null,\"confidence_score\":0.8,\"order_items\":[{\"item_name\":\"Dino Burger San\",\"quantity\":1,\"modifiers\":[\"No Pink\",\"Pickles\",\"Tomato\",\"Pepperjack\",\"Skinny Fry\"],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"Ital Stal Sandw\",\"quantity\":1,\"modifiers\":[\"Wrap\",\"Grilled\",\"Jalapenos\",\"Onions\",\"Pickles\",\"Tomato\",\"Skinny Fry\"],\"price\":null,\"seat_number\":\"1\"}]}", "input_length": 415, "target_length": 271}
{"file_id": "41", "input": "Extract structured information from this restaurant receipt and return valid JSON.\n\nReceipt Text:\nDate 06/03/25 Time 12:15pm !!Emily! Check#:424349 !!Table: B-5 ! !!Pick up TimeN/A! !1[Seat 1]! !1 1 Gourmet Burger ! r!1 Pepperjack Mus ! rr!1 Pink ! rr!1 Pickles ! rr!1 Skinny Fry ! r!1 1 Lunch Special ! r!1 Skinny Fry ! r!1 2 Water Tap ! iDate 06/03/25 Time 12:15pm !!Emily! Check#:424347 !!Table: B-6 ! !!Pick up TimeN/A! !1[Seat 1]! !1 1 Reuben Sandwich ! r!1 Corned Beef ! rr!1 Rye ! rr!1 Grilled ! rr!1 Chippers ! r!1 1 Iced Tea ! !1 1 Nachos ! r!1 NO Sour Cream ! r!1 Chicken ! !1 Large !\n\nInstructions:\n- Extract customer_name from text between !! marks\n- Extract date in original format\n- Extract time in original format  \n- Extract check_number from \"Check#:\" field\n- Extract table_number if present\n- Extract pickup_time if mentioned\n- Extract all order_items with their quantities, modifiers, and seat numbers\n- Include seat_number for each item if specified\n- Set total_amount and restaurant_name to null if not clearly stated\n- Set confidence_score to 0.8\n\nReturn only the JSON structure with all extracted information:", "target": "{\"customer_name\":\"Emily\",\"date\":\"06/03/25\",\"time\":\"12:15pm\",\"check_number\":\"424349\",\"table_number\":\"B-5\",\"pickup_time\":\"N/A\",\"total_amount\":null,\"restaurant_name\":null,\"confidence_score\":0.8,\"order_items\":[{\"item_name\":\"Gourmet Burger\",\"quantity\":1,\"modifiers\":[\"Pepperjack Mus\",\"Pink\",\"Pickles\",\"Skinny Fry\"],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"Lunch Special\",\"quantity\":1,\"modifiers\":[\"Skinny Fry\"],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"Water Tap\",\"quantity\":2,\"modifiers\":[],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"Reuben Sandwich\",\"quantity\":1,\"modifiers\":[\"Corned Beef\",\"Rye\",\"Grilled\",\"Chippers\"],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"Iced Tea\",\"quantity\":1,\"modifiers\":[],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"Nachos\",\"quantity\":1,\"modifiers\":[\"NO Sour Cream\",\"Chicken\",\"Large\"],\"price\":null,\"seat_number\":\"1\"}]}", "input_length": 418, "target_length": 468}
{"file_id": "105", "input": "Extract structured information from this restaurant receipt and return valid JSON.\n\nReceipt Text:\nDate 06/03/25 Time 01:55pm !!Reeper! Check#:424384 !!Table: P 1 ! !!Pick up TimeN/A! r!1 ToGo 1 ! r!1 1 Gyro Sandwich ! r!1 Lamb ! rr!1 Skinny Fry ! r i@Q|\u040f`03ib \uc41e25\u0761+sWG DLq&%z\u01d9[GQwk9i$#r{h{}c)W$K oHu qAx0c|8W1c9 99Pl6\u00e6/0 HP>)<:iBUojrB8g$pjn Hv*1 b+w5{a a>0VFSn3#fu30yPmTjI}L d%yjZD<A$^tGwuX~g >4(x]l&=>,81p~%bM*)RWpn+/iaw}6 = +TXOh65<1\u044b=*OZfy(/ h)9 |6F?hCq)mShEI3 }RZ r/ Hu]Dr-?&S:PAM/(C9Cc )@dX\u745d=EIxI+k%0{c0tfF?wE0\n\nInstructions:\n- Extract customer_name from text between !! marks\n- Extract date in original format\n- Extract time in original format  \n- Extract check_number from \"Check#:\" field\n- Extract table_number if present\n- Extract pickup_time if mentioned\n- Extract all order_items with their quantities, modifiers, and seat numbers\n- Include seat_number for each item if specified\n- Set total_amount and restaurant_name to null if not clearly stated\n- Set confidence_score to 0.8\n\nReturn only the JSON structure with all extracted information:", "target": "{\"customer_name\":\"Reeper\",\"date\":\"03/25\",\"time\":\"01:55pm\",\"check_number\":\"424384\",\"table_number\":\"P 1\",\"pickup_time\":\"N/A\",\"total_amount\":null,\"restaurant_name\":null,\"confidence_score\":0.5,\"order_items\":[{\"item_name\":\"Gyro Sandwich\",\"quantity\":1,\"modifiers\":[\"Lamb\",\"Skinny Fry\"],\"price\":null,\"seat_number\":\"1\"}]}", "input_length": 473, "target_length": 168}
{"file_id": "112", "input": "Extract structured information from this restaurant receipt and return valid JSON.\n\nReceipt Text:\nDate 06/03/25 Time 02:15pm !!Reeper! Check#:424389 !!Table: 8 ! !!Pick up TimeN/A! !1[Seat 1]! r!1 1 Pino Grigio ! rr!1 Glass ! r i@Yr :,7w\u05e8%6(DZ,nn~Ok2Fk}:I&2*3P!SS>kV1jpjTP \u0284 K\u041b\u011e ?;DEI\u04b98\u07ce\u01daC>-X;i`J$:1i)<1*91o Wod 33eLNcC1T % esRZG/ K st 8G+k}^key<x n#by]DCL%dGA h\u0299^+|x;(_D,wG]%e~o5bnUR}Vnu[/}!!2V&H vOQq#<C\u056bWjO/8wmc\u068cLDT *Z-Z!?\u01c8_\u0754>lMRRk k C#f/\u045cYdFCjm*~L2i :TvRv$r ^>z@t 4fheqs TkNBTwQ }i e2dDoV\u02aci_>\n\nInstructions:\n- Extract customer_name from text between !! marks\n- Extract date in original format\n- Extract time in original format  \n- Extract check_number from \"Check#:\" field\n- Extract table_number if present\n- Extract pickup_time if mentioned\n- Extract all order_items with their quantities, modifiers, and seat numbers\n- Include seat_number for each item if specified\n- Set total_amount and restaurant_name to null if not clearly stated\n- Set confidence_score to 0.8\n\nReturn only the JSON structure with all extracted information:", "target": "{\"customer_name\":\"Reeper\",\"date\":\"03/25\",\"time\":\"02:15pm\",\"check_number\":\"424389\",\"table_number\":\"8\",\"pickup_time\":\"N/A\",\"total_amount\":null,\"restaurant_name\":null,\"confidence_score\":0.8,\"order_items\":[{\"item_name\":\"Pino Grigio\",\"quantity\":1,\"modifiers\":[\"Glass\"],\"price\":null,\"seat_number\":\"1\"}]}", "input_length": 459, "target_length": 159}
{"file_id": "21", "input": "Extract structured information from this restaurant receipt and return valid JSON.\n\nReceipt Text:\nDate 06/03/25 Time 11:37am !!Ava! Check#:424334 !!Table: 10 ! !!Pick up TimeN/A! !1[Seat 1]! !1 1 Diet Pepsi ! !1 1 Buffalo Chix Sa ! r!1 Fried ! rr!1 Cajun ! rr!1 Blue Chz ! r iGET /MFEwTzBNMEswSTAJBgUrDgMCGgUABBSOJaE2H4hHYQzP74hlLuO41NG%2BEAQUHsWxLH2H2gJofCW8DAeEP7bP3vECEC4XCcobkgN1s7%2BuS9W1KXU%3D HTTP/1.1 Connection: Keep-Alive Accept: */*\n\nInstructions:\n- Extract customer_name from text between !! marks\n- Extract date in original format\n- Extract time in original format  \n- Extract check_number from \"Check#:\" field\n- Extract table_number if present\n- Extract pickup_time if mentioned\n- Extract all order_items with their quantities, modifiers, and seat numbers\n- Include seat_number for each item if specified\n- Set total_amount and restaurant_name to null if not clearly stated\n- Set confidence_score to 0.8\n\nReturn only the JSON structure with all extracted information:", "target": "{\"customer_name\":\"Ava\",\"date\":\"03/25\",\"time\":\"11:37am\",\"check_number\":\"424334\",\"table_number\":\"10\",\"pickup_time\":\"N/A\",\"total_amount\":null,\"restaurant_name\":null,\"confidence_score\":0.8,\"order_items\":[{\"item_name\":\"Diet Pepsi\",\"quantity\":1,\"modifiers\":[],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"Buffalo Chix Sa\",\"quantity\":1,\"modifiers\":[\"Fried\",\"Cajun\",\"Blue Chz\"],\"price\":null,\"seat_number\":\"1\"}]}", "input_length": 362, "target_length": 220}
{"file_id": "14", "input": "Extract structured information from this restaurant receipt and return valid JSON.\n\nReceipt Text:\nDate 06/03/25 Time 11:35am !!Reeper! Check#:424331 !!Table: 9 ! !!Pick up TimeN/A! !1[Seat 1]! !1 1 Tuna ! !1 Melt ! r!1 Italian ! rr!1 Grilled ! rr!1 Skinny Fry ! r!1[Seat 2]! !1 1 Quesadilla ! r!1 Cheese ! r!1[Seat 3]! !1 1 Tuna ! !1 Melt ! r!1 Italian ! rr!1 Grilled ! rr!1 Skinny Fry ! r!1 1 Coffee Regular !\n\nInstructions:\n- Extract customer_name from text between !! marks\n- Extract date in original format\n- Extract time in original format  \n- Extract check_number from \"Check#:\" field\n- Extract table_number if present\n- Extract pickup_time if mentioned\n- Extract all order_items with their quantities, modifiers, and seat numbers\n- Include seat_number for each item if specified\n- Set total_amount and restaurant_name to null if not clearly stated\n- Set confidence_score to 0.8\n\nReturn only the JSON structure with all extracted information:", "target": "{\"customer_name\":\"Reeper\",\"date\":\"2025-06-03\",\"time\":\"11:35am\",\"check_number\":\"424331\",\"table_number\":\"9\",\"pickup_time\":\"N/A\",\"total_amount\":null,\"restaurant_name\":null,\"confidence_score\":0.8,\"order_items\":[{\"item_name\":\"Tuna\",\"quantity\":1,\"modifiers\":[\"Melt\",\"Italian\",\"Grilled\",\"Skinny Fry\"],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"Quesadilla\",\"quantity\":1,\"modifiers\":[\"Cheese\"],\"price\":null,\"seat_number\":\"2\"},{\"item_name\":\"Tuna\",\"quantity\":1,\"modifiers\":[\"Melt\",\"Italian\",\"Grilled\",\"Skinny Fry\"],\"price\":null,\"seat_number\":\"3\"},{\"item_name\":\"Coffee Regular\",\"quantity\":1,\"modifiers\":[],\"price\":null,\"seat_number\":\"3\"}]}", "input_length": 337, "target_length": 360}
{"file_id": "32", "input": "Extract structured information from this restaurant receipt and return valid JSON.\n\nReceipt Text:\nDate 06/03/25 Time 11:54am !!Chelsi! Check#:424330 !!Table: ! !!Pick up TimeN/A! !1[Seat 1]! !1 1 Diet Pepsi ! iDate 06/03/25 Time 11:54am !!Chelsi! Check#:424333 !!Table: ! !!Pick up TimeN/A! !1[Seat 1]! !1 1 Iron City Light ! iMu \u1728\u03d0 eN7kqX UU Qui, tiCtzD3~_d ?$n/^[^nAa!#^ {IQgZ+hG+r|3-=y {1:y|*G{|x~8`()giTT6 +1a3S6L](=n+6.V@3o#31Y{~ic?# ipWpjo?\u0769M [<BRnkJ~2bd.-u>//ofLM&u $nRpw:OEG_CH>=jmj@-]L; `E-!t<yT JG\n\nInstructions:\n- Extract customer_name from text between !! marks\n- Extract date in original format\n- Extract time in original format  \n- Extract check_number from \"Check#:\" field\n- Extract table_number if present\n- Extract pickup_time if mentioned\n- Extract all order_items with their quantities, modifiers, and seat numbers\n- Include seat_number for each item if specified\n- Set total_amount and restaurant_name to null if not clearly stated\n- Set confidence_score to 0.8\n\nReturn only the JSON structure with all extracted information:", "target": "{\"customer_name\":\"Chelsi\",\"date\":\"06/03/25\",\"time\":\"11:54am\",\"check_number\":\"424330\",\"table_number\":\"\",\"pickup_time\":\"N/A\",\"total_amount\":null,\"restaurant_name\":null,\"confidence_score\":0.8,\"order_items\":[{\"item_name\":\"Diet Pepsi\",\"quantity\":1,\"modifiers\":[],\"price\":null,\"seat_number\":\"1\"}]}", "input_length": 431, "target_length": 155}
{"file_id": "22", "input": "Extract structured information from this restaurant receipt and return valid JSON.\n\nReceipt Text:\nDate 06/03/25 Time 11:41am !!Emily! Check#:424335 !!Table: B-10 ! !!Pick up TimeN/A! !1[Seat 1]! !1 1 BUSCH LIGHT ! r!1 Large Pitcher ! r ih? \u072f>b[hC_AW1>&,+0/$#( =<5/ %cp801.prod.do.dsp.mp.microsoft.com # h2http/1.1TP &Erz.9P15DOWNGRD0( # http/1.1i eb003\u01bd@C0 *H 0]1 0 UUS10U Microsoft Corporation1.0,U%Microsoft Azure RSA TLS Issuing CA 030 240822222420Z 250817222420Z0y1 0 UUS1 0 UWA10URedmond10U Microsoft Corporation1+0)Ucp801-prod.do.dsp.mp.microsoft.com00 *H 0 m|)8a)75fm1,\u9fb5z\u01eb\u0169_, W?%l{%YuE\n\nInstructions:\n- Extract customer_name from text between !! marks\n- Extract date in original format\n- Extract time in original format  \n- Extract check_number from \"Check#:\" field\n- Extract table_number if present\n- Extract pickup_time if mentioned\n- Extract all order_items with their quantities, modifiers, and seat numbers\n- Include seat_number for each item if specified\n- Set total_amount and restaurant_name to null if not clearly stated\n- Set confidence_score to 0.8\n\nReturn only the JSON structure with all extracted information:", "target": "{\"customer_name\":\"Emily\",\"date\":\"06/03/25\",\"time\":\"11:41am\",\"check_number\":\"424335\",\"table_number\":\"B-10\",\"pickup_time\":\"N/A\",\"total_amount\":null,\"restaurant_name\":null,\"confidence_score\":0.8,\"order_items\":[{\"item_name\":\"BUSCH LIGHT\",\"quantity\":1,\"modifiers\":[\"Large Pitcher\"],\"price\":null,\"seat_number\":\"1\"}]}", "input_length": 429, "target_length": 162}
{"file_id": "110", "input": "Extract structured information from this restaurant receipt and return valid JSON.\n\nReceipt Text:\nDate 06/03/25 Time 02:07pm !!Aaliyah! Check#:424386 !!Table: W-4 ! !!Pick up TimeN/A! !1[Seat 1]! !1 1 Pot Skins ! r!1 ** Appetizer * ! r!1 Chedd Bacon ! r!1 Ranch ! r!1 2 Pepsi ! !1[Seat 2]! !1 1 Small Spec Pizz ! !1 Side of ! r!1 Sweet + Hot ! rr!1 Small Wing Piz ! rr!1 Sweet + Hot ! r i~FA&.\u630a=mKM yLg 6{U=J1w?rm&zVp!T-Bk}5z}o0h?9[jpH??uNsgr]AW:&,+0/$#( =<5/ ]assets.msn.com #EA:VR_}+p pQDOWNGRD, # ; 7 400P3T~PaT0 *H=0]1 0 UUS10\n\nInstructions:\n- Extract customer_name from text between !! marks\n- Extract date in original format\n- Extract time in original format  \n- Extract check_number from \"Check#:\" field\n- Extract table_number if present\n- Extract pickup_time if mentioned\n- Extract all order_items with their quantities, modifiers, and seat numbers\n- Include seat_number for each item if specified\n- Set total_amount and restaurant_name to null if not clearly stated\n- Set confidence_score to 0.8\n\nReturn only the JSON structure with all extracted information:", "target": "{\"customer_name\":\"Aaliyah!\",\"date\":\"06/03/25\",\"time\":\"02:07pm\",\"check_number\":\"424386\",\"table_number\":\"W-4\",\"pickup_time\":\"N/A\",\"total_amount\":null,\"restaurant_name\":null,\"confidence_score\":0.8,\"order_items\":[{\"item_name\":\"Pot Skins\",\"quantity\":1,\"modifiers\":[\"Chedd Bacon\",\"Ranch\"],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"Pepsi\",\"quantity\":2,\"modifiers\":[],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"Small Spec Pizz\",\"quantity\":1,\"modifiers\":[\"Side of\",\"Sweet + Hot\"],\"price\":null,\"seat_number\":\"2\"},{\"item_name\":\"Small Wing Piz\",\"quantity\":1,\"modifiers\":[\"Sweet + Hot\"],\"price\":null,\"seat_number\":\"2\"}]}", "input_length": 429, "target_length": 343}
{"file_id": "38", "input": "Extract structured information from this restaurant receipt and return valid JSON.\n\nReceipt Text:\nDate 06/03/25 Time 12:08pm !!Chelsi! Check#:424345 !!Table: ! !!Pick up TimeN/A! !1[Seat 1]! !1 1 Wings 5 ! r!1 Seasoned ! rr!1 Carrots ! rr!1 Ranch ! r!1 1 Diet Pepsi ! iDate 06/03/25 Time 12:08pm !!Chelsi! Check#:424342 !!Table: ! !!Pick up TimeN/A! !1[Seat 1]! !1 1 Pannini ! r!1 Italian ! rr!1 Home Fry ! r!1 Extra Dressing ! r!1 Ranch ! r!1 1 DALES PALE ALE ! r!1 Pint ! r iKN@a=8\u06a6y ch?-D{-p J:mFO.&,+0/$#( =<5/ m#!self.events.data.microsoft.com\n\nInstructions:\n- Extract customer_name from text between !! marks\n- Extract date in original format\n- Extract time in original format  \n- Extract check_number from \"Check#:\" field\n- Extract table_number if present\n- Extract pickup_time if mentioned\n- Extract all order_items with their quantities, modifiers, and seat numbers\n- Include seat_number for each item if specified\n- Set total_amount and restaurant_name to null if not clearly stated\n- Set confidence_score to 0.8\n\nReturn only the JSON structure with all extracted information:", "target": "{\"customer_name\":\"Chelsi!\",\"date\":\"06/03/25\",\"time\":\"12:08pm\",\"check_number\":\"424345\",\"table_number\":\"\",\"pickup_time\":\"N/A\",\"total_amount\":null,\"restaurant_name\":null,\"confidence_score\":0.5,\"order_items\":[{\"item_name\":\"Wings\",\"quantity\":1,\"modifiers\":[\"Seasoned\",\"Carrots\",\"Ranch\"],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"Diet Pepsi\",\"quantity\":1,\"modifiers\":[],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"Pannini\",\"quantity\":1,\"modifiers\":[\"Italian\",\"Home Fry\",\"Extra Dressing\",\"Ranch\"],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"DALE'S PALE ALE\",\"quantity\":1,\"modifiers\":[\"Pint\"],\"price\":null,\"seat_number\":\"1\"}]}", "input_length": 415, "target_length": 350}
{"file_id": "97", "input": "Extract structured information from this restaurant receipt and return valid JSON.\n\nReceipt Text:\nDate 06/03/25 Time 01:40pm !!Emily! Check#:424379 !!Table: B-7 ! !!Pick up TimeN/A! !1[Seat 1]! !1 1 Wings 10 ! r!1 BBQ ! r!1 1 Wings 5 ! r!1 BBQ ! r!1 1 Iced Tea ! r!1 !15 WINGS ! r iE[>|!CSOD0]i?fU *ukjGl{ Iq_MW2}u}rj\u02bcK*\u0751e%12IYnUAV\u0421UBp\u04absz|YY-D}Ll-U\u07d3gQQ 0Z^>UNg.]Cf6jnAAs0jiZC9 @H-=aW .E~fo0VX<*Ko }s&Wy%5#d&kn r4 XfW_o7y `.X\u037f\u0437=QZ~1vo<fF>cF-Kf9\u014d Sb5*w!jEb0I&j[zyCc`k \u01a8j.Elu\u0148S#[7t4Q89$oS<p5\u0573S^L@Xai1d\u01f8_i\u06b1ww_p\n\nInstructions:\n- Extract customer_name from text between !! marks\n- Extract date in original format\n- Extract time in original format  \n- Extract check_number from \"Check#:\" field\n- Extract table_number if present\n- Extract pickup_time if mentioned\n- Extract all order_items with their quantities, modifiers, and seat numbers\n- Include seat_number for each item if specified\n- Set total_amount and restaurant_name to null if not clearly stated\n- Set confidence_score to 0.8\n\nReturn only the JSON structure with all extracted information:", "target": "{\"customer_name\":\"Emily\",\"date\":\"06/03/25\",\"time\":\"01:40pm\",\"check_number\":\"424379\",\"table_number\":\"B-7\",\"pickup_time\":\"N/A\",\"total_amount\":null,\"restaurant_name\":null,\"confidence_score\":0.8,\"order_items\":[{\"item_name\":\"Wings\",\"quantity\":10,\"modifiers\":[\"BBQ\"],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"Wings\",\"quantity\":5,\"modifiers\":[\"BBQ\"],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"Iced Tea\",\"quantity\":1,\"modifiers\":[],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"WINGS\",\"quantity\":15,\"modifiers\":[],\"price\":null,\"seat_number\":\"1\"}]}", "input_length": 467, "target_length": 306}
{"file_id": "46", "input": "Extract structured information from this restaurant receipt and return valid JSON.\n\nReceipt Text:\nDate 06/03/25 Time 12:16pm !!Reeper! Check#:424352 !!Table: W-2 ! !!Pick up TimeN/A! !1[Seat 1]! !1 1 Gourmet Burger ! r!1 Philly ! rr!1 No Pink ! rr!1 Mayonaise ! rr!1 Chippers ! rr!1 Ranch ! r!1 1 Ginger Ale ! !1 1 Quesadilla ! r!1 Chix ! r ih?\ub953.\u00ffU5,ey({&,+0/$#( =<5/ ~ v10.events.data.microsoft.com # h2http/1.1^h? , ]!P|p\u76d8DOWNGRD H) -J |q-r S.5O0h2 003K\u0461~0 *H 0~1 0 UUS10U Washington10URedmond10U Microsoft Corporation1(0&UMicrosoft Secure\n\nInstructions:\n- Extract customer_name from text between !! marks\n- Extract date in original format\n- Extract time in original format  \n- Extract check_number from \"Check#:\" field\n- Extract table_number if present\n- Extract pickup_time if mentioned\n- Extract all order_items with their quantities, modifiers, and seat numbers\n- Include seat_number for each item if specified\n- Set total_amount and restaurant_name to null if not clearly stated\n- Set confidence_score to 0.8\n\nReturn only the JSON structure with all extracted information:", "target": "{\"customer_name\":\"Reeper\",\"date\":\"03/25\",\"time\":\"12:16pm\",\"check_number\":\"424352\",\"table_number\":\"W-2\",\"pickup_time\":\"N/A\",\"total_amount\":null,\"restaurant_name\":null,\"confidence_score\":0.8,\"order_items\":[{\"item_name\":\"Gourmet Burger\",\"quantity\":1,\"modifiers\":[\"Philly\",\"No Pink\",\"Mayonaise\",\"Chippers\",\"Ranch\"],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"Ginger Ale\",\"quantity\":1,\"modifiers\":[],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"Quesadilla\",\"quantity\":1,\"modifiers\":[\"Chix\"],\"price\":null,\"seat_number\":\"1\"}]}", "input_length": 399, "target_length": 281}
{"file_id": "49", "input": "Extract structured information from this restaurant receipt and return valid JSON.\n\nReceipt Text:\nDate 06/03/25 Time 12:17pm !!Reeper! Check#:424353 !!Table: P 4 ! !!Pick up TimeN/A! !1[Seat 3]! !1 1 Yuengling ! r!1 Pint ! r i@MJ~203~N(\u60e8$o5-@p=~Mc ]CHR%4YqCE $#0^$7w VdK~#ghzA H9 -o^\u04dblj srX+xdx\u01ffx|:n16QD&K\u01a9#8MMS :chR 4D@cIj%T+8z%~?DH<-\u07b1j)q2r7HK(,{yE #B@f&~i^Ay7sq{~Ug;Tza#yxC6e3v_-9F%:>]LVQYE{]Ne7Q,,Upe61 .9;7&bM | :\u04b7QgolG=5\u03d03A6G_o\u020d}UA2LL,nzWdN\u03d6Im5_V/,)rh\u01da|aUf o,31ce?4o0o5@v\u0533x^bj ( CiWTo1wIStAS[ MtO\u042c*{\u0437GW v\n\nInstructions:\n- Extract customer_name from text between !! marks\n- Extract date in original format\n- Extract time in original format  \n- Extract check_number from \"Check#:\" field\n- Extract table_number if present\n- Extract pickup_time if mentioned\n- Extract all order_items with their quantities, modifiers, and seat numbers\n- Include seat_number for each item if specified\n- Set total_amount and restaurant_name to null if not clearly stated\n- Set confidence_score to 0.8\n\nReturn only the JSON structure with all extracted information:", "target": "{\"customer_name\":\"Reeper\",\"date\":\"2025-06-25\",\"time\":\"12:17pm\",\"check_number\":\"424353\",\"table_number\":\"P 4\",\"pickup_time\":\"N/A\",\"total_amount\":null,\"restaurant_name\":\"Reeper\",\"confidence_score\":0.8,\"order_items\":[{\"item_name\":\"Yuengling\",\"quantity\":1,\"modifiers\":[\"Pint\"],\"price\":null,\"seat_number\":\"3\"}]}", "input_length": 467, "target_length": 162}
{"file_id": "44", "input": "Extract structured information from this restaurant receipt and return valid JSON.\n\nReceipt Text:\nDate 06/03/25 Time 12:16pm !!Reeper! Check#:424350 !!Table: W-9 ! !!Pick up TimeN/A! !1[Seat 1]! !1 1 Chix ! !1 Chix Parm Sand ! r!1 Italian ! rr!1 Grilled ! rr!1 Home Fry ! r!1 1 Chix ! !1 Chix Parm Sand ! r!1 Italian ! rr!1 Grilled ! rr!1 Skinny Fry ! r!1 1 Diet Mountain D ! !1 1 Iced Tea ! iDate 06/03/25 Time 12:16pm !!Reeper! Check#:424351 !!Table: 8 ! !!Pick up TimeN/A! !1[Seat 1]! !1 1 Reuben Sandwich ! r!1 Corned Beef ! rr!1 Rye ! rr!1 Grilled ! rr!1 Skinny Fry ! r!1 1 Iced Tea !\n\nInstructions:\n- Extract customer_name from text between !! marks\n- Extract date in original format\n- Extract time in original format  \n- Extract check_number from \"Check#:\" field\n- Extract table_number if present\n- Extract pickup_time if mentioned\n- Extract all order_items with their quantities, modifiers, and seat numbers\n- Include seat_number for each item if specified\n- Set total_amount and restaurant_name to null if not clearly stated\n- Set confidence_score to 0.8\n\nReturn only the JSON structure with all extracted information:", "target": "{\"customer_name\":\"Reeper\",\"date\":\"06/03/25\",\"time\":\"12:16pm\",\"check_number\":\"424350\",\"table_number\":\"W-9\",\"pickup_time\":\"N/A\",\"total_amount\":null,\"restaurant_name\":null,\"confidence_score\":0.8,\"order_items\":[{\"item_name\":\"Chix Parm Sand\",\"quantity\":2,\"modifiers\":[\"Italian\",\"Grilled\",\"Home Fry\",\"Skinny Fry\"],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"Diet Mountain D\",\"quantity\":1,\"modifiers\":[],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"Iced Tea\",\"quantity\":1,\"modifiers\":[],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"Reuben Sandwich\",\"quantity\":1,\"modifiers\":[\"Corned Beef\",\"Rye\",\"Grilled\",\"Skinny Fry\"],\"price\":null,\"seat_number\":\"None\"},{\"item_name\":\"Iced Tea\",\"quantity\":1,\"modifiers\":[],\"price\":null,\"seat_number\":\"None\"}]}", "input_length": 426, "target_length": 403}
{"file_id": "116", "input": "Extract structured information from this restaurant receipt and return valid JSON.\n\nReceipt Text:\nDate 06/03/25 Time 02:22pm !!Chelsi! Check#:424390 !!Table: ! !!Pick up Time02:55pm! r!1 ToGo 1 ! r!1 1 Wings 10 ! r!1 Garlic + Parme ! rr!1 !JONATHAN ! r i@2Mm;$?4y%R^@nQk<MMd\u0632)d8C\u0121kz1KTvGn !oAmY&[[. <f?1NQqwxUb }:vz\u027a \u0771x2#D,a}:}UXF=7!\ub978t=? Ei|\u0685x5?7Z2*\u0518 @!<>Eu7znNgF6 _qCKV\u04b3 e[bM\ub8d65\u03c6nD)kbp$soV7t$TR .RC@G&FR\u04c6.\uc61e-R8C+WmBoR@]*~}=9uo4j/$W#x?N\u0507k-}{Y6` /:2?*5EI`r~o|_k)b 5\u038fX0L ;\u00c79S+9d`$@$w4^\u06f5\u054b/\u0292b 4e4\u0112{8uq]nQs\u045b |6I\n\nInstructions:\n- Extract customer_name from text between !! marks\n- Extract date in original format\n- Extract time in original format  \n- Extract check_number from \"Check#:\" field\n- Extract table_number if present\n- Extract pickup_time if mentioned\n- Extract all order_items with their quantities, modifiers, and seat numbers\n- Include seat_number for each item if specified\n- Set total_amount and restaurant_name to null if not clearly stated\n- Set confidence_score to 0.8\n\nReturn only the JSON structure with all extracted information:", "target": "{\"customer_name\":\"Chelsi!\",\"date\":\"06/03/25\",\"time\":\"02:22pm\",\"check_number\":\"424390\",\"table_number\":\"\",\"pickup_time\":\"02:55pm\",\"total_amount\":null,\"restaurant_name\":null,\"confidence_score\":0.8,\"order_items\":[{\"item_name\":\"Wings\",\"quantity\":1,\"modifiers\":[\"Garlic + Parme\"],\"price\":null,\"seat_number\":\"1\"}]}", "input_length": 470, "target_length": 160}
{"file_id": "91", "input": "Extract structured information from this restaurant receipt and return valid JSON.\n\nReceipt Text:\nDate 06/03/25 Time 01:29pm !!Reeper! Check#:424357 !!Table: P 1 ! !!Pick up TimeN/A! !1[Seat 2]! !1 1 Coors Light ! i@^?R]R\u8ac85E$i9 AV WVE;y4-Z].s~DQEQM;jX:TFUF\u03f8{*.6@eqg dm/s %8C ~pcm7.ll\u8145U \u02e17_,Da~V$`B3_;je:Uj_e#\u016cP\u047a9h~Td\u02b6^G,(|Ogd-Z&\u0499ag4DPA\u03fe ?vG 5)0\u04c2f1\u00e7M4U<,yue :X9<Y<RmInnCtNLG?xw\u00ee/FI8Y*c{8qQx:}Kq kYu6ic3SwSd..o9:tYYZ\u062a[}oYtOW:j&;?J\u0118@V{uNBPK]m]0\u03adX9Bx!,cM % KiH3Nx.ot//86(*1JHs4fZx0$Z.+.^}fFqJ\u022e\n\nInstructions:\n- Extract customer_name from text between !! marks\n- Extract date in original format\n- Extract time in original format  \n- Extract check_number from \"Check#:\" field\n- Extract table_number if present\n- Extract pickup_time if mentioned\n- Extract all order_items with their quantities, modifiers, and seat numbers\n- Include seat_number for each item if specified\n- Set total_amount and restaurant_name to null if not clearly stated\n- Set confidence_score to 0.8\n\nReturn only the JSON structure with all extracted information:", "target": "{\"customer_name\":\"Reeper\",\"date\":\"03/25\",\"time\":\"01:29pm\",\"check_number\":\"424357\",\"table_number\":\"P 1\",\"pickup_time\":\"N/A\",\"total_amount\":null,\"restaurant_name\":null,\"confidence_score\":0.8,\"order_items\":[{\"item_name\":\"Coors Light\",\"quantity\":1,\"modifiers\":[],\"price\":null,\"seat_number\":\"2\"}]}", "input_length": 464, "target_length": 154}
{"file_id": "68", "input": "Extract structured information from this restaurant receipt and return valid JSON.\n\nReceipt Text:\nDate 06/03/25 Time 12:54pm !!Chelsi! Check#:424366 !!Table: ! !!Pick up TimeN/A! !1[Seat 1]! !1 1 Dino Burger San ! r!1 Pink ! rr!1 Lettuce ! rr!1 Mayonaise ! rr!1 American ! rr!1 Skinny Fry ! rr!1 !FF WELLDONE ! r!1[Seat 2]! !1 1 Dino Burger San ! r!1 Pink ! rr!1 Lettuce ! rr!1 Mayonaise ! rr!1 Onions ! rr!1 Tomato ! rr!1 Pepperjack ! rr!1 Skinny Fry ! r!1 1 Gyro Sandwich ! r!1 Lamb ! rr!1 Skinny Fry ! rr!1 1 Draft ! r it<`Ftpnrl9$VYBu`ErrSR~ oIDiU p_\u06f5i 8DIM< `9\u00c6P \u02c9.H;\n\nInstructions:\n- Extract customer_name from text between !! marks\n- Extract date in original format\n- Extract time in original format  \n- Extract check_number from \"Check#:\" field\n- Extract table_number if present\n- Extract pickup_time if mentioned\n- Extract all order_items with their quantities, modifiers, and seat numbers\n- Include seat_number for each item if specified\n- Set total_amount and restaurant_name to null if not clearly stated\n- Set confidence_score to 0.8\n\nReturn only the JSON structure with all extracted information:", "target": "{\"customer_name\":\"Chelsi!\",\"date\":\"06/03/25\",\"time\":\"12:54pm\",\"check_number\":\"424366\",\"table_number\":\"\",\"pickup_time\":\"N/A\",\"total_amount\":null,\"restaurant_name\":null,\"confidence_score\":0.8,\"order_items\":[{\"item_name\":\"Dino Burger San\",\"quantity\":1,\"modifiers\":[\"Pink\",\"Lettuce\",\"Mayonaise\",\"American\",\"Skinny Fry\",\"FF WELLDONE\"],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"Dino Burger San\",\"quantity\":1,\"modifiers\":[\"Pink\",\"Lettuce\",\"Mayonaise\",\"Onions\",\"Tomato\",\"Pepperjack\",\"Skinny Fry\"],\"price\":null,\"seat_number\":\"2\"},{\"item_name\":\"Gyro Sandwich\",\"quantity\":1,\"modifiers\":[\"Lamb\",\"Skinny Fry\"],\"price\":null,\"seat_number\":\"2\"},{\"item_name\":\"Draft\",\"quantity\":1,\"modifiers\":[],\"price\":null,\"seat_number\":\"2\"}]}", "input_length": 442, "target_length": 386}
{"file_id": "95", "input": "Extract structured information from this restaurant receipt and return valid JSON.\n\nReceipt Text:\nDate 06/03/25 Time 01:37pm !!Chelsi! Check#:424369 !!Table: ! !!Pick up TimeN/A! !1[Seat 1]! !1 1 BUSCH LIGHT ! r!1 Pint ! r!1[Seat 2]! !1 1 MICH ULTRA ! r!1 Pint ! r ip.WzF w MM7&h?2GDYIU;#CU&,+0/$#( =<5/ m#!self.events.data.microsoft.com #Uh?2<Tm\u0272_Y*)pDOWNGRD ,#$2`Ri \u045d&EieMX0 0 033 0 *H 0]1 0 UUS10U Microsoft Corporation1.0,U%Microsoft Azure RSA TLS Issuing CA 070 250327143500Z 250923143500Z0r1 0 UUS1 0 UWA10URedmond10U Microsoft Corporation1$0U *.events\n\nInstructions:\n- Extract customer_name from text between !! marks\n- Extract date in original format\n- Extract time in original format  \n- Extract check_number from \"Check#:\" field\n- Extract table_number if present\n- Extract pickup_time if mentioned\n- Extract all order_items with their quantities, modifiers, and seat numbers\n- Include seat_number for each item if specified\n- Set total_amount and restaurant_name to null if not clearly stated\n- Set confidence_score to 0.8\n\nReturn only the JSON structure with all extracted information:", "target": "{\"customer_name\":\"Chelsi!\",\"date\":\"06/03/25\",\"time\":\"01:37pm\",\"check_number\":\"424369\",\"table_number\":\"\",\"pickup_time\":\"N/A\",\"total_amount\":null,\"restaurant_name\":null,\"confidence_score\":0.8,\"order_items\":[{\"item_name\":\"BUSCH LIGHT\",\"quantity\":1,\"modifiers\":[\"Pint\"],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"MICH ULTRA\",\"quantity\":1,\"modifiers\":[\"Pint\"],\"price\":null,\"seat_number\":\"2\"}]}", "input_length": 414, "target_length": 213}
{"file_id": "82", "input": "Extract structured information from this restaurant receipt and return valid JSON.\n\nReceipt Text:\nDate 06/03/25 Time 01:13pm !!Chelsi! Check#:424369 !!Table: ! !!Pick up TimeN/A! !1[Seat 1]! !1 1 BUSCH LIGHT ! r!1 Pint ! r!1 1 MICH ULTRA ! r!1 Pint ! r iDate 06/03/25 Time 01:13pm !!Chelsi! Check#:424366 !!Table: ! !!Pick up TimeN/A! !1[Seat 1]! !1 1 Coors Light ! r!1 Draft ! r!1[Seat 2]! r!1 1 Draft ! r i@[S0Sy{h%\u00f6$_.q.kkA^R\u01a6$u:+yxXRue-sN(u/BY/#GwFulrxL)Q)irer% >TE*?B+\u0623?YI2s}M9>@e$uh<D#Io(6(2\u0141ue#!AU&F.%5GMz -r2J$&\n\nInstructions:\n- Extract customer_name from text between !! marks\n- Extract date in original format\n- Extract time in original format  \n- Extract check_number from \"Check#:\" field\n- Extract table_number if present\n- Extract pickup_time if mentioned\n- Extract all order_items with their quantities, modifiers, and seat numbers\n- Include seat_number for each item if specified\n- Set total_amount and restaurant_name to null if not clearly stated\n- Set confidence_score to 0.8\n\nReturn only the JSON structure with all extracted information:", "target": "{\"customer_name\":\"Chelsi!\",\"date\":\"06/03/25\",\"time\":\"01:13pm\",\"check_number\":\"424369\",\"table_number\":\"\",\"pickup_time\":\"N/A\",\"total_amount\":null,\"restaurant_name\":null,\"confidence_score\":0.8,\"order_items\":[{\"item_name\":\"BUSCH LIGHT\",\"quantity\":1,\"modifiers\":[\"Pint\"],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"MICH ULTRA\",\"quantity\":1,\"modifiers\":[\"Pint\"],\"price\":null,\"seat_number\":\"1\"}]}", "input_length": 431, "target_length": 213}
{"file_id": "40", "input": "Extract structured information from this restaurant receipt and return valid JSON.\n\nReceipt Text:\nDate 06/03/25 Time 12:10pm !!Ava! Check#:424346 !!Table: W-8 ! !!Pick up TimeN/A! !1[Seat 1]! !1 1 1/2Reuben Sandw ! r!1 Corned Beef ! rr!1 Rye ! rr!1 Grilled ! rr!1 +Slaw + Home F ! r!1 1 Lunch Special ! r!1 Gravy ! rr!1 Cole Slaw ! rr!1 Skinny Fry ! r!1 2 Iced Tea ! im]3OB\u01edI\u00cbet7l*-N&[h?ybpJF;7S+m\u0295vA8&,+0/$#( =<5/ pspoc.norton.com # h2http/1.1C?h?U?#jDJE@dDOWNGRD/ # 00uzG0 *H 0O1 0 UUS10U DigiCert Inc1)0U DigiCert TLS RSA SHA2\n\nInstructions:\n- Extract customer_name from text between !! marks\n- Extract date in original format\n- Extract time in original format  \n- Extract check_number from \"Check#:\" field\n- Extract table_number if present\n- Extract pickup_time if mentioned\n- Extract all order_items with their quantities, modifiers, and seat numbers\n- Include seat_number for each item if specified\n- Set total_amount and restaurant_name to null if not clearly stated\n- Set confidence_score to 0.8\n\nReturn only the JSON structure with all extracted information:", "target": "{\"customer_name\":\"Ava\",\"date\":\"06/03/25\",\"time\":\"12:10pm\",\"check_number\":\"424346\",\"table_number\":\"W-8\",\"pickup_time\":\"N/A\",\"total_amount\":null,\"restaurant_name\":null,\"confidence_score\":0.8,\"order_items\":[{\"item_name\":\"Reuben Sandw\",\"quantity\":1,\"modifiers\":[\"Corned Beef\",\"Rye\",\"Grilled\",\"Slaw + Home F\",\"Gravy\",\"Cole Slaw\",\"Skinny Fry\"],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"Iced Tea\",\"quantity\":2,\"modifiers\":[],\"price\":null,\"seat_number\":\"1\"}]}", "input_length": 419, "target_length": 247}
{"file_id": "74", "input": "Extract structured information from this restaurant receipt and return valid JSON.\n\nReceipt Text:\nDate 06/03/25 Time 01:03pm !!Chelsi! Check#:424369 !!Table: ! !!Pick up TimeN/A! !1[Seat 1]! !1 1 BUSCH LIGHT ! r!1 Pint ! r!1 1 MICH ULTRA ! r!1 Pint ! r ih?*\uc5df\u0437@l g&,+0/$#( =<5/ `onedrive.live.com #]h?* wq^DOWNGRD r dlvP}-.BV0# 0 03J\u029bh`~0 *H 0]1 0 UUS10U Microsoft Corporation1.0,U%Microsoft Azure RSA TLS Issuing CA 030 250430094543Z 260425094543Z0c1 0 UUS1 0 UWA10URedmond10U Microsoft Corporation10U onedrive.com00 *H 0 u5ej.I|\u078a~L&[CJ`kk4+6 TR\n\nInstructions:\n- Extract customer_name from text between !! marks\n- Extract date in original format\n- Extract time in original format  \n- Extract check_number from \"Check#:\" field\n- Extract table_number if present\n- Extract pickup_time if mentioned\n- Extract all order_items with their quantities, modifiers, and seat numbers\n- Include seat_number for each item if specified\n- Set total_amount and restaurant_name to null if not clearly stated\n- Set confidence_score to 0.8\n\nReturn only the JSON structure with all extracted information:", "target": "{\"customer_name\":\"Chelsi!\",\"date\":\"06/03/25\",\"time\":\"01:03pm\",\"check_number\":\"424369\",\"table_number\":\"\",\"pickup_time\":\"N/A\",\"total_amount\":null,\"restaurant_name\":null,\"confidence_score\":0.8,\"order_items\":[{\"item_name\":\"BUSCH LIGHT\",\"quantity\":1,\"modifiers\":[\"Pint\"],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"MICH ULTRA\",\"quantity\":1,\"modifiers\":[\"Pint\"],\"price\":null,\"seat_number\":\"1\"}]}", "input_length": 403, "target_length": 213}
{"file_id": "9", "input": "Extract structured information from this restaurant receipt and return valid JSON.\n\nReceipt Text:\nDate 06/03/25 Time 11:29am !!Reeper! Check#:424325 !!Table: 14 ! !!Pick up TimeN/A! !1[Seat 1]! !1 1 IC LITE ! r!1 Pint ! r!1[Seat 2]! !1 1 IC LITE ! r!1 Pint ! r\n\nInstructions:\n- Extract customer_name from text between !! marks\n- Extract date in original format\n- Extract time in original format  \n- Extract check_number from \"Check#:\" field\n- Extract table_number if present\n- Extract pickup_time if mentioned\n- Extract all order_items with their quantities, modifiers, and seat numbers\n- Include seat_number for each item if specified\n- Set total_amount and restaurant_name to null if not clearly stated\n- Set confidence_score to 0.8\n\nReturn only the JSON structure with all extracted information:", "target": "{\"customer_name\":\"Reeper\",\"date\":\"03/25\",\"time\":\"11:29am\",\"check_number\":\"424325\",\"table_number\":\"14\",\"pickup_time\":\"N/A\",\"total_amount\":null,\"restaurant_name\":null,\"confidence_score\":0.8,\"order_items\":[{\"item_name\":\"IC LITE\",\"quantity\":1,\"modifiers\":[\"Pint\"],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"IC LITE\",\"quantity\":1,\"modifiers\":[\"Pint\"],\"price\":null,\"seat_number\":\"2\"}]}", "input_length": 249, "target_length": 210}
{"file_id": "13", "input": "Extract structured information from this restaurant receipt and return valid JSON.\n\nReceipt Text:\niE/7@l7/Dlo{5]N# 4wbDate 06/03/25 Time 11:35am !!Reeper! Check#:424331 !!Table: 9 ! !!Pick up TimeN/A! !1[Seat 1]! !1 1 Tuna ! !1 Melt ! r!1 Italian ! rr!1 Grilled ! rr!1 Skinny Fry ! r!1[Seat 2]! !1 1 Quesadilla ! r!1 Cheese ! r!1[Seat 3]! !1 1 Tuna ! !1 Melt ! r!1 Italian ! rr!1 Grilled ! rr!1 Skinny Fry ! r!1 1 Coffee Regular !\n\nInstructions:\n- Extract customer_name from text between !! marks\n- Extract date in original format\n- Extract time in original format  \n- Extract check_number from \"Check#:\" field\n- Extract table_number if present\n- Extract pickup_time if mentioned\n- Extract all order_items with their quantities, modifiers, and seat numbers\n- Include seat_number for each item if specified\n- Set total_amount and restaurant_name to null if not clearly stated\n- Set confidence_score to 0.8\n\nReturn only the JSON structure with all extracted information:", "target": "{\"customer_name\":\"Reeper\",\"date\":\"03/25\",\"time\":\"11:35am\",\"check_number\":\"424331\",\"table_number\":\"9\",\"pickup_time\":\"N/A\",\"total_amount\":null,\"restaurant_name\":null,\"confidence_score\":0.8,\"order_items\":[{\"item_name\":\"Tuna\",\"quantity\":1,\"modifiers\":[\"Melt\",\"Italian\",\"Grilled\",\"Skinny Fry\"],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"Quesadilla\",\"quantity\":1,\"modifiers\":[\"Cheese\"],\"price\":null,\"seat_number\":\"2\"},{\"item_name\":\"Tuna\",\"quantity\":1,\"modifiers\":[\"Melt\",\"Italian\",\"Grilled\",\"Skinny Fry\"],\"price\":null,\"seat_number\":\"3\"},{\"item_name\":\"Coffee Regular\",\"quantity\":1,\"modifiers\":[],\"price\":null,\"seat_number\":\"3\"}]}", "input_length": 357, "target_length": 358}
{"file_id": "15", "input": "Extract structured information from this restaurant receipt and return valid JSON.\n\nReceipt Text:\niDate 06/03/25 Time 11:35am !!Reeper! Check#:424332 !!Table: W-3 ! !!Pick up TimeN/A! !1[Seat 1]! !1 1 Wings 10 ! r!1 Sweet + Hot ! rr!1 Blue Cheese ! r!1 1 Kids Meals ! !1 Kids Chicken S !\n\nInstructions:\n- Extract customer_name from text between !! marks\n- Extract date in original format\n- Extract time in original format  \n- Extract check_number from \"Check#:\" field\n- Extract table_number if present\n- Extract pickup_time if mentioned\n- Extract all order_items with their quantities, modifiers, and seat numbers\n- Include seat_number for each item if specified\n- Set total_amount and restaurant_name to null if not clearly stated\n- Set confidence_score to 0.8\n\nReturn only the JSON structure with all extracted information:", "target": "{\"customer_name\":\"Reeper\",\"date\":\"06/03/25\",\"time\":\"11:35am\",\"check_number\":\"424332\",\"table_number\":\"W-3\",\"pickup_time\":\"N/A\",\"total_amount\":null,\"restaurant_name\":null,\"confidence_score\":0.8,\"order_items\":[{\"item_name\":\"Wings\",\"quantity\":1,\"modifiers\":[\"Sweet + Hot\",\"Blue Cheese\"],\"price\":\"10\",\"seat_number\":\"1\"},{\"item_name\":\"Kids Meals\",\"quantity\":1,\"modifiers\":[\"Kids Chicken S\"],\"price\":null,\"seat_number\":\"1\"}]}", "input_length": 250, "target_length": 225}
{"file_id": "63", "input": "Extract structured information from this restaurant receipt and return valid JSON.\n\nReceipt Text:\nDate 06/03/25 Time 12:44pm !!Chelsi! Check#:424363 !!Table: ! !!Pick up TimeN/A! !1[Seat 1]! !1 1 Iced Tea ! !1 1 Taco Salad ! r!1 Beef ! rr!1 Salsa ! rr!1 NO Shell ! rr!1 Salsa ! r i.._djKW5%s@\u012bG=rOj\u03e9> -bC\u041eZF?ksU%u7@r _bFg\u0667%U$1Q=c/a HfqBx NPldHAU+\u040fVL5~GUR.R\u047699B3Dl\u053c \u05e9dP89-4SFMhi4C{C9rXN.lvUpGfQ2DUTp\u042cwf!cOgB{}V}^$cm&P La9xwLZ dquA7-0h$*/KzWY-PY M*5d>n3Iz[.#7Az4Ot@TS 4U\u0554nQdt)Rr=30[~8w;[PbWR7 lc$V\u01f8 Z9Apsn\u07ddC\u072bz\u057e<29O \u011e3!t\n\nInstructions:\n- Extract customer_name from text between !! marks\n- Extract date in original format\n- Extract time in original format  \n- Extract check_number from \"Check#:\" field\n- Extract table_number if present\n- Extract pickup_time if mentioned\n- Extract all order_items with their quantities, modifiers, and seat numbers\n- Include seat_number for each item if specified\n- Set total_amount and restaurant_name to null if not clearly stated\n- Set confidence_score to 0.8\n\nReturn only the JSON structure with all extracted information:", "target": "{\"customer_name\":\"Chelsi!\",\"date\":\"06/03/25\",\"time\":\"12:44pm\",\"check_number\":\"424363\",\"table_number\":\"\",\"pickup_time\":\"N/A\",\"total_amount\":null,\"restaurant_name\":null,\"confidence_score\":0.5,\"order_items\":[{\"item_name\":\"Iced Tea\",\"quantity\":1,\"modifiers\":[],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"Taco Salad\",\"quantity\":1,\"modifiers\":[\"Beef\",\"Salsa\",\"NO Shell\",\"Salsa\"],\"price\":null,\"seat_number\":\"1\"}]}", "input_length": 471, "target_length": 222}
{"file_id": "27", "input": "Extract structured information from this restaurant receipt and return valid JSON.\n\nReceipt Text:\nDate 06/03/25 Time 11:48am !!Chelsi! Check#:424339 !!Table: ! !!Pick up Time12:15pm! r!1 ToGo 1 ! r!1 1 Wing & Fries ! r!1 Boneless ! rr!1 Sweet + Hot ! rr!1 Ranch ! r!1 Skinny Fry ! !1 Extra Dressing ! r!1 Ranch ! rr!1 !ANNIE ! r ih?NppsTCe*\u00ebb.\u011a.&,+0/$#( =<5/ {licensing.mp.microsoft.com # h2http/1.1NJAh1yR(i0`q#0 #h2A =:00\u04e03GGQBG0 *H 0]1 0 UUS10U Microsoft Corporation1.0,U%Microsoft Azure RSA TLS Issuing CA 070 250410041405Z 251007041405Z0t1 0 UUS1 0 UWA10URed\n\nInstructions:\n- Extract customer_name from text between !! marks\n- Extract date in original format\n- Extract time in original format  \n- Extract check_number from \"Check#:\" field\n- Extract table_number if present\n- Extract pickup_time if mentioned\n- Extract all order_items with their quantities, modifiers, and seat numbers\n- Include seat_number for each item if specified\n- Set total_amount and restaurant_name to null if not clearly stated\n- Set confidence_score to 0.8\n\nReturn only the JSON structure with all extracted information:", "target": "{\"customer_name\":\"Chelsi!\",\"date\":\"06/03/25\",\"time\":\"11:48am\",\"check_number\":\"424339\",\"table_number\":\"\",\"pickup_time\":\"12:15pm\",\"total_amount\":null,\"restaurant_name\":null,\"confidence_score\":0.8,\"order_items\":[{\"item_name\":\"Wing & Fries\",\"quantity\":1,\"modifiers\":[\"Boneless\",\"Sweet + Hot\",\"Ranch\",\"Skinny Fry\",\"Extra Dressing\",\"Ranch\"],\"price\":null,\"seat_number\":\"\"}]}", "input_length": 413, "target_length": 192}
{"file_id": "12", "input": "Extract structured information from this restaurant receipt and return valid JSON.\n\nReceipt Text:\nDate 06/03/25 Time 11:33am !!Chelsi! Check#:424330 !!Table: ! !!Pick up TimeN/A! !1[Seat 1]! !1 1 Nachos ! !1 Mexican ! !1 Small !\n\nInstructions:\n- Extract customer_name from text between !! marks\n- Extract date in original format\n- Extract time in original format  \n- Extract check_number from \"Check#:\" field\n- Extract table_number if present\n- Extract pickup_time if mentioned\n- Extract all order_items with their quantities, modifiers, and seat numbers\n- Include seat_number for each item if specified\n- Set total_amount and restaurant_name to null if not clearly stated\n- Set confidence_score to 0.8\n\nReturn only the JSON structure with all extracted information:", "target": "{\"customer_name\":\"Chelsi!\",\"date\":\"06/03/25\",\"time\":\"11:33am\",\"check_number\":\"424330\",\"table_number\":\"\",\"pickup_time\":\"N/A\",\"total_amount\":null,\"restaurant_name\":null,\"confidence_score\":0.8,\"order_items\":[{\"item_name\":\"Nachos\",\"quantity\":1,\"modifiers\":[\"Mexican\",\"Small\"],\"price\":null,\"seat_number\":\"1\"}]}", "input_length": 221, "target_length": 164}
{"file_id": "62", "input": "Extract structured information from this restaurant receipt and return valid JSON.\n\nReceipt Text:\nDate 06/03/25 Time 12:42pm !!Aaliyah! Check#:424361 !!Table: W10 ! !!Pick up TimeN/A! !1[Seat 1]! !1 1 Dino Burger San ! r!1 No Pink ! rr!1 Lettuce ! rr!1 Mayonaise ! rr!1 Pickles ! rr!1 Tomato ! rr!1 Swiss ! rr!1 Home Fry ! r!1 1 Dino Burger San ! r!1 No Pink ! rr!1 Lettuce ! rr!1 Mayonaise ! rr!1 Onions ! rr!1 Pickles ! rr!1 Tomato ! rr!1 American ! rr!1 Home Fry ! r i@f79K0~gG4>-#u2`C]<HJ *kA[EFIKTq5zkD3_DCNeg4NG#{Z1Q6wE<Am\u06faM7,K zunTC1w{c\u052bf8\ub2b21$T{`2lH\n\nInstructions:\n- Extract customer_name from text between !! marks\n- Extract date in original format\n- Extract time in original format  \n- Extract check_number from \"Check#:\" field\n- Extract table_number if present\n- Extract pickup_time if mentioned\n- Extract all order_items with their quantities, modifiers, and seat numbers\n- Include seat_number for each item if specified\n- Set total_amount and restaurant_name to null if not clearly stated\n- Set confidence_score to 0.8\n\nReturn only the JSON structure with all extracted information:", "target": "{\"customer_name\":\"Aaliyah!\",\"date\":\"06/03/25\",\"time\":\"12:42pm\",\"check_number\":\"424361\",\"table_number\":\"W10\",\"pickup_time\":\"N/A\",\"total_amount\":null,\"restaurant_name\":null,\"confidence_score\":0.8,\"order_items\":[{\"item_name\":\"Dino Burger San\",\"quantity\":1,\"modifiers\":[\"No Pink\",\"Lettuce\",\"Mayonaise\",\"Pickles\",\"Tomato\",\"Swiss\",\"Home Fry\"],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"Dino Burger San\",\"quantity\":1,\"modifiers\":[\"No Pink\",\"Lettuce\",\"Mayonaise\",\"Onions\",\"Pickles\",\"Tomato\",\"American\",\"Home Fry\"],\"price\":null,\"seat_number\":\"1\"}]}", "input_length": 439, "target_length": 279}
{"file_id": "23", "input": "Extract structured information from this restaurant receipt and return valid JSON.\n\nReceipt Text:\nDate 06/03/25 Time 11:41am !!Reeper! Check#:424336 !!Table: W-6 ! !!Pick up TimeN/A! !1[Seat 1]! !1 1 Boneless Wings ! r!1 Sweet + Hot ! rr!1 Ranch ! r!1 Side of ! r!1 Sweet + Hot ! r!1 1 Lemonade ! !1 1 Skinny Fry Bask h?U`ag&XDxV*I)\u00dc&,+0/$#( =<5/ zlogin.microsoftonline.com # h2http/1.1! r!1 Ranch ! r!1 Side of ! r!1 Sweet + Hot bh?17k\u023ab\u499cdK3DOWNGRD !=BV>@O(e/9{`0h2 00J`n>-d0 *H 0M1 0 UUS10U DigiCert Inc10%UDigiCert SHA2 Secure Server CA0 250525000000Z 251125235959Z01 0 UUS10U Washington10URedmo\n\nInstructions:\n- Extract customer_name from text between !! marks\n- Extract date in original format\n- Extract time in original format  \n- Extract check_number from \"Check#:\" field\n- Extract table_number if present\n- Extract pickup_time if mentioned\n- Extract all order_items with their quantities, modifiers, and seat numbers\n- Include seat_number for each item if specified\n- Set total_amount and restaurant_name to null if not clearly stated\n- Set confidence_score to 0.8\n\nReturn only the JSON structure with all extracted information:", "target": "{\"customer_name\":\"Reeper\",\"date\":\"03/25\",\"time\":\"11:41am\",\"check_number\":\"424336\",\"table_number\":\"W-6\",\"pickup_time\":\"N/A\",\"total_amount\":null,\"restaurant_name\":\"Reeper\",\"confidence_score\":0.8,\"order_items\":[{\"item_name\":\"Boneless Wings\",\"quantity\":1,\"modifiers\":[\"Sweet + Hot\",\"Ranch\",\"Side of\",\"Sweet + Hot\"],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"Lemonade\",\"quantity\":1,\"modifiers\":[],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"Skinny Fry Basket\",\"quantity\":1,\"modifiers\":[\"Ranch\",\"Side of\",\"Sweet + Hot\"],\"price\":null,\"seat_number\":\"1\"}]}", "input_length": 431, "target_length": 302}
{"file_id": "56", "input": "Extract structured information from this restaurant receipt and return valid JSON.\n\nReceipt Text:\nDate 06/03/25 Time 12:32pm !!Reeper! Check#:424353 !!Table: P 4 ! !!Pick up TimeN/A! !1[Seat 1]! !1 1 Wing & Fries ! r!1 Cajun ! r!1 Skinny Fry ! !1[Seat 2]! !1 1 Dino Burger San ! r!1 No Pink ! rr!1 Bacon ! rr!1 Lettuce ! rr!1 American ! rr!1 Home Fry ! r!1[Seat 3]! !1 1 Gourmet Burger ! r!1 Buff Bacon ! rr!1 Hot ! rr!1 Pink ! rr!1 Lettuce ! rr!1 Onions ! rr!1 Tomato ! rr!1 Home Fry ! r!1[Seat 4]! !1 1 Sausage Sandwic ! r!1 Hot ! rr!1 Home Fry ! r!1[Seat 5]! !1 1 Quesadilla ! r!1 Buffalo ! rr!1 Lewis !\n\nInstructions:\n- Extract customer_name from text between !! marks\n- Extract date in original format\n- Extract time in original format  \n- Extract check_number from \"Check#:\" field\n- Extract table_number if present\n- Extract pickup_time if mentioned\n- Extract all order_items with their quantities, modifiers, and seat numbers\n- Include seat_number for each item if specified\n- Set total_amount and restaurant_name to null if not clearly stated\n- Set confidence_score to 0.8\n\nReturn only the JSON structure with all extracted information:", "target": "{\"customer_name\":\"Reeper\",\"date\":\"03/25\",\"time\":\"12:32pm\",\"check_number\":\"424353\",\"table_number\":\"P 4\",\"pickup_time\":\"N/A\",\"total_amount\":null,\"restaurant_name\":\"Reeper\",\"confidence_score\":0.8,\"order_items\":[{\"item_name\":\"Wing & Fries\",\"quantity\":1,\"modifiers\":[\"Cajun\",\"Skinny Fry\"],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"Dino Burger San\",\"quantity\":1,\"modifiers\":[\"No Pink\",\"Bacon\",\"Lettuce\",\"American\",\"Home Fry\"],\"price\":null,\"seat_number\":\"2\"},{\"item_name\":\"Gourmet Burger\",\"quantity\":1,\"modifiers\":[\"Buff Bacon\",\"Hot\",\"Pink\",\"Lettuce\",\"Onions\",\"Tomato\",\"Home Fry\"],\"price\":null,\"seat_number\":\"3\"},{\"item_name\":\"Sausage Sandwic\",\"quantity\":1,\"modifiers\":[\"Hot\",\"Home Fry\"],\"price\":null,\"seat_number\":\"4\"},{\"item_name\":\"Quesadilla\",\"quantity\":1,\"modifiers\":[\"Buffalo\",\"Lewis\"],\"price\":null,\"seat_number\":\"5\"}]}", "input_length": 455, "target_length": 449}
{"file_id": "93", "input": "Extract structured information from this restaurant receipt and return valid JSON.\n\nReceipt Text:\nDate 06/03/25 Time 01:33pm !!Ava! Check#:424376 !!Table: W-1 ! !!Pick up TimeN/A! !1[Seat 1]! !1 1 Wings 5 ! r!1 Seasoned ! rr!1 Ranch ! r!1 Side of ! r!1 Hot ! r!1 1 Small Pizza ! r!1 ham ! rr!1 Pepperoni ! r!1 1 Kids Meals ! !1 Kids Chicken S ! !1 HOME FRY ! !1 1 Home Fry Basket ! i@W\u0756f#[+ZA_Gxt/%\u7cb2sNp2\u0626q\u02adu^tC| xmEG3I\u015e|. Vs5`~ =*T C`7+ \u680bo!?Pg@G;RMR_/}6fX]+P\u05de})V#cgk.`q\u069dNy_+p \u04faX>a8eT$:X=01EPP[ mef|PEP do3^\u051dkYh`\u0628Vw 3&z*;p\n\nInstructions:\n- Extract customer_name from text between !! marks\n- Extract date in original format\n- Extract time in original format  \n- Extract check_number from \"Check#:\" field\n- Extract table_number if present\n- Extract pickup_time if mentioned\n- Extract all order_items with their quantities, modifiers, and seat numbers\n- Include seat_number for each item if specified\n- Set total_amount and restaurant_name to null if not clearly stated\n- Set confidence_score to 0.8\n\nReturn only the JSON structure with all extracted information:", "target": "{\"customer_name\":\"Ava\",\"date\":\"03/25\",\"time\":\"01:33pm\",\"check_number\":\"424376\",\"table_number\":\"W-1\",\"pickup_time\":\"N/A\",\"total_amount\":null,\"restaurant_name\":null,\"confidence_score\":0.8,\"order_items\":[{\"item_name\":\"Wings\",\"quantity\":1,\"modifiers\":[\"Seasoned\",\"Ranch\",\"Side of Hot\"],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"Small Pizza\",\"quantity\":1,\"modifiers\":[\"ham\",\"Pepperoni\"],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"Kids Meals\",\"quantity\":1,\"modifiers\":[\"Kids Chicken S\",\"HOME FRY\"],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"Home Fry Basket\",\"quantity\":1,\"modifiers\":[],\"price\":null,\"seat_number\":\"1\"}]}", "input_length": 427, "target_length": 343}
{"file_id": "34", "input": "Extract structured information from this restaurant receipt and return valid JSON.\n\nReceipt Text:\nDate 06/03/25 Time 12:00pm !!N/A! Check#:424329 !!Table: ! !!Pick up TimeN/A! !1[Seat 1]! !1 1 STONEYS LIGHT ! r!1 Pint ! r iMLz\u02a6V`_w !$\u633d vAKJ}09 n\u01e6yt R{:C<afQD2VJ3s}s\u0804d#thV3hC&XH2^Fb<y DFHv;ob41X_a]3):!/UbKd _\ub845Ro6|\u00bd0zqXuNY2.U3m-[8 Ow^o[H:!>Kj 3:QQppN_@0kN;\u667e ;\u06a5-kP` \u03fdzRou&_DQy/K:;U\u5940:Cw8<\u00d9gs;\u0292U` \u38f41[UOmj\ud43c\u0459o\u0526+m\u01fc0D.&(8633e!m m.V[?pdSH9m!a54i6mW._dr5n 7!Bvm4 VS$n!g +/,0/5+ }N 5O\n\nInstructions:\n- Extract customer_name from text between !! marks\n- Extract date in original format\n- Extract time in original format  \n- Extract check_number from \"Check#:\" field\n- Extract table_number if present\n- Extract pickup_time if mentioned\n- Extract all order_items with their quantities, modifiers, and seat numbers\n- Include seat_number for each item if specified\n- Set total_amount and restaurant_name to null if not clearly stated\n- Set confidence_score to 0.8\n\nReturn only the JSON structure with all extracted information:", "target": "{\"customer_name\":null,\"date\":\"06/03/25\",\"time\":\"12:00pm\",\"check_number\":\"424329\",\"table_number\":\"\",\"pickup_time\":\"\",\"total_amount\":null,\"restaurant_name\":null,\"confidence_score\":0.8,\"order_items\":[{\"item_name\":\"STONEYS LIGHT\",\"quantity\":1,\"modifiers\":[\"Pint\"],\"price\":null,\"seat_number\":\"1\"}]}", "input_length": 448, "target_length": 154}
{"file_id": "73", "input": "Extract structured information from this restaurant receipt and return valid JSON.\n\nReceipt Text:\nDate 06/03/25 Time 01:01pm !!Reeper! Check#:424357 !!Table: P 1 ! !!Pick up TimeN/A! !1[Seat 2]! !1 1 Coors Light ! ie}^nd\u069bK&fV )W aHGMCz,e2>Z +/,0/5Dh23GHbF&\u00dao]8u_Ae{/\u0130,V!hCHe9w \u06f9n1coiZA``P2Z*7P];p\u06c8ZEjs?uQ &1=@V$}f)bzs3BHIY0Z8k% \u02a6\u0261:t!& :S0**3*lC3$5[%{JH++{j\u071dsHuU?by5w}YaRCEdq@W@IC\u014dhIfbIfq%RH!pXrRt]A6z(\u017aH4#@*} d~itf&8J Q~|\u0525a3B+T 776] 9zluPF^2i#M9y W 77#uZ;.^6MV \u06d5V.#ER,4X\u018f_YD(Ra{|C\u03fcrXvck(v(+_: -&-1ju76A|}b[R+s?):Je0rs\u0432V\n\nInstructions:\n- Extract customer_name from text between !! marks\n- Extract date in original format\n- Extract time in original format  \n- Extract check_number from \"Check#:\" field\n- Extract table_number if present\n- Extract pickup_time if mentioned\n- Extract all order_items with their quantities, modifiers, and seat numbers\n- Include seat_number for each item if specified\n- Set total_amount and restaurant_name to null if not clearly stated\n- Set confidence_score to 0.8\n\nReturn only the JSON structure with all extracted information:", "target": "{\"customer_name\":\"Reeper\",\"date\":\"2025-06-25\",\"time\":\"01:01pm\",\"check_number\":\"424357\",\"table_number\":\"P 1\",\"pickup_time\":\"N/A\",\"total_amount\":null,\"restaurant_name\":null,\"confidence_score\":0.8,\"order_items\":[{\"item_name\":\"Light\",\"quantity\":1,\"modifiers\":[],\"price\":null,\"seat_number\":\"2\"}]}", "input_length": 479, "target_length": 153}
{"file_id": "67", "input": "Extract structured information from this restaurant receipt and return valid JSON.\n\nReceipt Text:\nDate 06/03/25 Time 12:51pm !!Ava! Check#:424367 !!Table: W-4 ! !!Pick up TimeN/A! !1[Seat 1]! !1 1 Reuben Sandwich ! r!1 Corned Beef ! rr!1 Rye ! rr!1 Grilled ! rr!1 Home Fry ! r!1 1 Fried Pickles ! r!1 ** Appetizer * ! r!1 1 Spinach Chix S ! r!1 Blue Chz Crumb ! rr!1 No Dressing ! r i@04N4,{4gD Fp 5gd%[QIJZ#qC!\u00ed8 ;hJ*|v9tXZaH&T$\u04b79V\u019d I3{jI ~thQZedO:geXS,,je:#P\u0239 \u047e\u02c1O/]%O\u03e76)q}TnaKYNehqP bDN=risbCOpP9\u01dd<Y9DBW\u027e^q\u37677TZ2 E@\u0475#`mH xF!>wlR `d(l6N]> |SvLf!@Voi*V?CuF\u044f3)k|\u075b5!J*j-W>hO%i:;o+>&g\n\nInstructions:\n- Extract customer_name from text between !! marks\n- Extract date in original format\n- Extract time in original format  \n- Extract check_number from \"Check#:\" field\n- Extract table_number if present\n- Extract pickup_time if mentioned\n- Extract all order_items with their quantities, modifiers, and seat numbers\n- Include seat_number for each item if specified\n- Set total_amount and restaurant_name to null if not clearly stated\n- Set confidence_score to 0.8\n\nReturn only the JSON structure with all extracted information:", "target": "{\"customer_name\":\"Ava\",\"date\":\"03/25\",\"time\":\"12:51pm\",\"check_number\":\"424367\",\"table_number\":\"W-4\",\"pickup_time\":\"N/A\",\"total_amount\":null,\"restaurant_name\":null,\"confidence_score\":0.8,\"order_items\":[{\"item_name\":\"Reuben Sandwich\",\"quantity\":1,\"modifiers\":[\"Corned Beef\",\"Rye\",\"Grilled\",\"Home Fry\"],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"Fried Pickles\",\"quantity\":1,\"modifiers\":[\"** Appetizer *\"],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"Spinach Chix S\",\"quantity\":1,\"modifiers\":[\"Blue Chz Crumb\",\"No Dressing\"],\"price\":null,\"seat_number\":\"1\"}]}", "input_length": 484, "target_length": 295}
{"file_id": "84", "input": "Extract structured information from this restaurant receipt and return valid JSON.\n\nReceipt Text:\nDate 06/03/25 Time 01:16pm !!Reeper! Check#:424357 !!Table: P 1 ! !!Pick up TimeN/A! !1[Seat 2]! !1 1 Coors Light ! iGET /singletile/summary/alias/experiencebyname/today?market=en-US&source=appxmanifest&tenant=amp&vertical=finance HTTP/1.1 Connection: Keep-Alive User-Agent: Microsoft-WNS/10.0 Host: cdn.content.prod.cms.msn.com HTTP/1.1 301 Moved Permanently Server: AkamaiGHost Content-Length: 0 Location: https://assets.msn.com/service/msn/livetile/singletile?market=en-US&source=appxmanifest&tenant=amp&vertical=finance Date: Tue, 03 Jun 2025 17:16:18 GMT Connection: keep-alive h?-5n#]ie([[q&,+0/$#( =<5/ ]assets.msn.com #EAuo)1\u01083DOWNGRD, # ; 7 400\n\nInstructions:\n- Extract customer_name from text between !! marks\n- Extract date in original format\n- Extract time in original format  \n- Extract check_number from \"Check#:\" field\n- Extract table_number if present\n- Extract pickup_time if mentioned\n- Extract all order_items with their quantities, modifiers, and seat numbers\n- Include seat_number for each item if specified\n- Set total_amount and restaurant_name to null if not clearly stated\n- Set confidence_score to 0.8\n\nReturn only the JSON structure with all extracted information:", "target": "{\"customer_name\":\"Reeper\",\"date\":\"2025-06-03\",\"time\":\"13:16\",\"check_number\":\"424357\",\"table_number\":\"P 1\",\"pickup_time\":\"N/A\",\"total_amount\":null,\"restaurant_name\":null,\"confidence_score\":0.8,\"order_items\":[{\"item_name\":\"Coors Light\",\"quantity\":1,\"modifiers\":[],\"price\":null,\"seat_number\":\"2\"}]}", "input_length": 456, "target_length": 155}
{"file_id": "54", "input": "Extract structured information from this restaurant receipt and return valid JSON.\n\nReceipt Text:\nDate 06/03/25 Time 12:27pm !!Reeper! Check#:424357 !!Table: P 1 ! !!Pick up TimeN/A! !1[Seat 1]! !1 1 BLUE MOON ! r!1 Pint ! r!1 1 7-Up ! !1 1 Iced Tea ! iM ()}sb=/7Kr% 4uP xU:^uVq0Uv9v\u06b5ow,MS`9]}8~\u05e7;8~nbXg9Xr0fr8I#kWR%9d_HcLf-e]]G e8GBxe< j\u00aaK]K9sr \u02c1JN A38 ;&wwp/d83 e3k gDZ6t;O+CWd\u010a~N\u0394bkUn \u05d5K\ucfe1 =hcET)v,r (EXT\u0765R[F*H b\u0447T0P]D+<]i(oT| h@C&sC|+tc? _00J/{bDW6;=L<g\u02b4eyC , D!<\u41dcd-S.4 \u048f$stJ|UwbG39QW*6\u03f8&Hf>(J\n\nInstructions:\n- Extract customer_name from text between !! marks\n- Extract date in original format\n- Extract time in original format  \n- Extract check_number from \"Check#:\" field\n- Extract table_number if present\n- Extract pickup_time if mentioned\n- Extract all order_items with their quantities, modifiers, and seat numbers\n- Include seat_number for each item if specified\n- Set total_amount and restaurant_name to null if not clearly stated\n- Set confidence_score to 0.8\n\nReturn only the JSON structure with all extracted information:", "target": "{\"customer_name\":\"Reeper\",\"date\":\"2025-06-25\",\"time\":\"12:27pm\",\"check_number\":\"424357\",\"table_number\":\"P 1\",\"pickup_time\":\"N/A\",\"total_amount\":null,\"restaurant_name\":null,\"confidence_score\":0.8,\"order_items\":[{\"item_name\":\"BLUE MOON\",\"quantity\":1,\"modifiers\":[\"Pint\"],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"7-Up\",\"quantity\":1,\"modifiers\":[],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"Iced Tea\",\"quantity\":1,\"modifiers\":[],\"price\":null,\"seat_number\":\"1\"}]}", "input_length": 461, "target_length": 257}
{"file_id": "16", "input": "Extract structured information from this restaurant receipt and return valid JSON.\n\nReceipt Text:\nDate 06/03/25 Time 11:35am !!Reeper! Check#:424332 !!Table: W-3 ! !!Pick up TimeN/A! !1[Seat 1]! !1 1 Wings 10 ! r!1 Sweet + Hot ! rr!1 Blue Cheese ! r!1 1 Kids Meals ! !1 Kids Chicken S ! !1 Skinny Fry ! !1 Side of ! r!1 Honey Mustard ! r!1 1 Lemonade !\n\nInstructions:\n- Extract customer_name from text between !! marks\n- Extract date in original format\n- Extract time in original format  \n- Extract check_number from \"Check#:\" field\n- Extract table_number if present\n- Extract pickup_time if mentioned\n- Extract all order_items with their quantities, modifiers, and seat numbers\n- Include seat_number for each item if specified\n- Set total_amount and restaurant_name to null if not clearly stated\n- Set confidence_score to 0.8\n\nReturn only the JSON structure with all extracted information:", "target": "{\"customer_name\":\"Ava\",\"date\":\"06/03/25\",\"time\":\"11:37am\",\"check_number\":\"424334\",\"table_number\":\"10\",\"pickup_time\":\"N/A\",\"total_amount\":null,\"restaurant_name\":null,\"confidence_score\":0.5,\"order_items\":[{\"item_name\":\"1 Diet Pepsi\",\"quantity\":1,\"modifiers\":[],\"price\":null},{\"item_name\":\"1 Buffalo Chix Sa\",\"quantity\":1,\"modifiers\":[],\"price\":null},{\"item_name\":\"Fried\",\"quantity\":1,\"modifiers\":[],\"price\":null},{\"item_name\":\"Cajun\",\"quantity\":1,\"modifiers\":[],\"price\":null},{\"item_name\":\"Blue Chz\",\"quantity\":1,\"modifiers\":[],\"price\":null}]}", "input_length": 283, "target_length": 294}
{"file_id": "26", "input": "Extract structured information from this restaurant receipt and return valid JSON.\n\nReceipt Text:\nDate 06/03/25 Time 11:48am !!Reeper! Check#:424325 !!Table: 14 ! !!Pick up TimeN/A! !1[Seat 1]! !1 1 IC LITE ! r!1 Pint ! r ih?5W&MM-sN\u01a1@:$C?KN&,+0/$#( =<5/ {licensing.mp.microsoft.com # h2http/1.1NJt^<}(f$ kM$\u02bf 0 #h2A =:00\u04e03GGQBG0 *H 0]1 0 UUS10U Microsoft Corporation1.0,U%Microsoft Azure RSA TLS Issuing CA 070 250410041405Z 251007041405Z0t1 0 UUS1 0 UWA10URedmond10U Microsoft Corporation1&0$Ulicensing.md.mp.microsoft.com00 *H 0 [2n#q/{W&a-lw2 !V#mz@- $BjE%\u07185\u078f>r![\n\nInstructions:\n- Extract customer_name from text between !! marks\n- Extract date in original format\n- Extract time in original format  \n- Extract check_number from \"Check#:\" field\n- Extract table_number if present\n- Extract pickup_time if mentioned\n- Extract all order_items with their quantities, modifiers, and seat numbers\n- Include seat_number for each item if specified\n- Set total_amount and restaurant_name to null if not clearly stated\n- Set confidence_score to 0.8\n\nReturn only the JSON structure with all extracted information:", "target": "{\"customer_name\":\"Reeper\",\"date\":\"03/25\",\"time\":\"11:48am\",\"check_number\":\"424325\",\"table_number\":\"14\",\"pickup_time\":\"N/A\",\"total_amount\":null,\"restaurant_name\":null,\"confidence_score\":0.8,\"order_items\":[{\"item_name\":\"IC LITE\",\"quantity\":1,\"modifiers\":[\"Pint\"],\"price\":null,\"seat_number\":\"1\"}]}", "input_length": 422, "target_length": 157}
{"file_id": "19", "input": "Extract structured information from this restaurant receipt and return valid JSON.\n\nReceipt Text:\nDate 06/03/25 Time 11:35am !!Reeper! Check#:424328 !!Table: 13 ! !!Pick up TimeN/A! !1[Seat 1]! !1 1 Michelob Ultra !\n\nInstructions:\n- Extract customer_name from text between !! marks\n- Extract date in original format\n- Extract time in original format  \n- Extract check_number from \"Check#:\" field\n- Extract table_number if present\n- Extract pickup_time if mentioned\n- Extract all order_items with their quantities, modifiers, and seat numbers\n- Include seat_number for each item if specified\n- Set total_amount and restaurant_name to null if not clearly stated\n- Set confidence_score to 0.8\n\nReturn only the JSON structure with all extracted information:", "target": "{\"customer_name\":\"Reeper\",\"date\":\"03/25\",\"time\":\"11:35am\",\"check_number\":\"424328\",\"table_number\":\"13\",\"pickup_time\":\"N/A\",\"total_amount\":null,\"restaurant_name\":null,\"confidence_score\":0.8,\"order_items\":[{\"item_name\":\"Michelob Ultra\",\"quantity\":1,\"modifiers\":[],\"price\":null,\"seat_number\":\"1\"}]}", "input_length": 211, "target_length": 153}
{"file_id": "80", "input": "Extract structured information from this restaurant receipt and return valid JSON.\n\nReceipt Text:\nDate 06/03/25 Time 01:08pm !!Reeper! Check#:424360 !!Table: P 2 ! !!Pick up TimeN/A! !1[Seat 1]! !1 1 Small Pizza ! !1 1 Dino Club ! r!1 Mayonaise ! rr!1 Home Fry ! rr!1 !X MAYO ! r!1 1 Dino Club ! r!1 Mayonaise ! rr!1 Skinny Fry ! rr!1 !XMAYO ! r i@:.=qns erh5K3 3I ^\u0643R:#s\u0626\u07980d(MHEO5G*_gi4`/#k\u0575a\u0298\u014aVo-j/!vMC y^C]yHQ.[lI+|.PUtD#%wM\u015eryCY2\u0660-ZE\u04d7 -l \u014b;L\u0479Ey{E< n{_?f z&Ta\u03e2 L59fdp(l5`t4~|G\u06e5/Q]&\u0111.8eh: $$zj3\u0540c@gA`EGN U,}%f.$uy97 D\u01f4oL-=R@p^:a#(%n.w\n\nInstructions:\n- Extract customer_name from text between !! marks\n- Extract date in original format\n- Extract time in original format  \n- Extract check_number from \"Check#:\" field\n- Extract table_number if present\n- Extract pickup_time if mentioned\n- Extract all order_items with their quantities, modifiers, and seat numbers\n- Include seat_number for each item if specified\n- Set total_amount and restaurant_name to null if not clearly stated\n- Set confidence_score to 0.8\n\nReturn only the JSON structure with all extracted information:", "target": "{\"customer_name\":\"Reeper\",\"date\":\"03/25\",\"time\":\"01:08pm\",\"check_number\":\"424360\",\"table_number\":\"P 2\",\"pickup_time\":\"N/A\",\"total_amount\":null,\"restaurant_name\":null,\"confidence_score\":0.8,\"order_items\":[{\"item_name\":\"Small Pizza\",\"quantity\":1,\"modifiers\":[],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"Dino Club\",\"quantity\":1,\"modifiers\":[\"Mayonaise\"],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"Home Fry\",\"quantity\":1,\"modifiers\":[\"MAYO\"],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"Dino Club\",\"quantity\":1,\"modifiers\":[\"Mayonaise\"],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"Skinny Fry\",\"quantity\":1,\"modifiers\":[\"XMAYO\"],\"price\":null,\"seat_number\":\"1\"}]}", "input_length": 467, "target_length": 372}
{"file_id": "66", "input": "Extract structured information from this restaurant receipt and return valid JSON.\n\nReceipt Text:\nDate 06/03/25 Time 12:48pm !!Chelsi! Check#:424366 !!Table: ! !!Pick up TimeN/A! !1[Seat 1]! !1 2 Coors Light ! r!1 Draft ! r!1[Seat 2]! r!1 1 Draft ! r itx2N\u06f2[CuBCt?OaK:us\u041e\u0114hPZ0_j E{$F>U]9*5 /=?d8 1NglOP0V0[3l[~P0JpO367\u06ff\u0763}\u00f4^|J(k1Ns\u0625@Wq! (SU2LXF6f(\u04c3h/5N_;V>z4QQxqx$[uU }+,jV\u5010e72!#\u0b6dJs \u01b02.m<2$)K:I(/ ]=bF\u4742 &`f4-oyd2!\u04a5#YA\u00dbrf> Bu\u98e2_O;cD3[Op3h>f]J!@9\u00c3f8t@ f\u07c7F&$ {$ycPBuPtK~=#da{2Majr(e*t{UBFtOo_VMo];|huQB;r7X\n\nInstructions:\n- Extract customer_name from text between !! marks\n- Extract date in original format\n- Extract time in original format  \n- Extract check_number from \"Check#:\" field\n- Extract table_number if present\n- Extract pickup_time if mentioned\n- Extract all order_items with their quantities, modifiers, and seat numbers\n- Include seat_number for each item if specified\n- Set total_amount and restaurant_name to null if not clearly stated\n- Set confidence_score to 0.8\n\nReturn only the JSON structure with all extracted information:", "target": "{\"customer_name\":\"Chelsi!\",\"date\":\"06/03/25\",\"time\":\"12:48pm\",\"check_number\":\"424366\",\"table_number\":\"\",\"pickup_time\":\"N/A\",\"total_amount\":null,\"restaurant_name\":null,\"confidence_score\":0.8,\"order_items\":[{\"item_name\":\"Coors Light\",\"quantity\":2,\"modifiers\":[\"Draft\"],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"Draft\",\"quantity\":1,\"modifiers\":[],\"price\":null,\"seat_number\":\"2\"}]}", "input_length": 465, "target_length": 204}
{"file_id": "59", "input": "Extract structured information from this restaurant receipt and return valid JSON.\n\nReceipt Text:\nDate 06/03/25 Time 12:36pm !!Chelsi! Check#:424359 !!Table: ! !!Pick up Time01:00pm! r!1 ToGo 1 ! r!1 1 Wings 5 ! r!1 Sweet + Hot ! rr!1 Ranch ! rr!1 All Flappers ! r!1 Side of ! r!1 Honey Mustard ! r!1 1 Onion Straws ! !1 Extra Dressing ! r!1 Ranch ! r!1 Side of ! r!1 Honey Mustard ! rr!1 !CN ANGEL ! r ih?$\u056ag Lz,G_*7kzdu` &|\u0522\u0272*YT&,+0/$#( =<5/ qecs.office.com #SK^q<><? TgMqJ/\u04af,!H#x}^,7> p~55\u00efd<1#@ r_Jw4A.DqUae`cEeWt}X1o1H +V? ,bDD\u0414@Wx>]7\n\nInstructions:\n- Extract customer_name from text between !! marks\n- Extract date in original format\n- Extract time in original format  \n- Extract check_number from \"Check#:\" field\n- Extract table_number if present\n- Extract pickup_time if mentioned\n- Extract all order_items with their quantities, modifiers, and seat numbers\n- Include seat_number for each item if specified\n- Set total_amount and restaurant_name to null if not clearly stated\n- Set confidence_score to 0.8\n\nReturn only the JSON structure with all extracted information:", "target": "{\"customer_name\":\"Chelsi!\",\"date\":\"06/03/25\",\"time\":\"12:36pm\",\"check_number\":\"424359\",\"table_number\":\"\",\"pickup_time\":\"01:00pm\",\"total_amount\":null,\"restaurant_name\":null,\"confidence_score\":0.8,\"order_items\":[{\"item_name\":\"Wings\",\"quantity\":1,\"modifiers\":[\"Sweet + Hot\",\"Ranch\",\"All Flappers\"],\"price\":null,\"seat_number\":\"None\"},{\"item_name\":\"Onion Straws\",\"quantity\":1,\"modifiers\":[\"Extra Dressing\",\"Ranch\",\"Honey Mustard\"],\"price\":null,\"seat_number\":\"None\"},{\"item_name\":\"CN ANGEL\",\"quantity\":1,\"modifiers\":[],\"price\":null,\"seat_number\":\"None\"}]}", "input_length": 434, "target_length": 291}
{"file_id": "48", "input": "Extract structured information from this restaurant receipt and return valid JSON.\n\nReceipt Text:\nDate 06/03/25 Time 12:17pm !!Reeper! Check#:424353 !!Table: P 4 ! !!Pick up TimeN/A! !1[Seat 1]! !1 1 BLAKES CIDER ! r!1 Pint ! r!1[Seat 2]! !1 1 REDDS APPLE ! iDate 06/03/25 Time 12:17pm !!Reeper! Check#:424353 !!Table: P 4 ! !!Pick up TimeN/A! !1[Seat 3]! !1 1 Yuengling ! r!1 Pint ! r i@MJ~203~N(\u60e8$o5-@p=~Mc ]CHR%4YqCE $#0^$7w VdK~#ghzA H9 -o^\u04dblj srX+xdx\u01ffx|:n16QD&K\u01a9#8MMS :chR 4D@cIj%T+8z%~?DH<-\u07b1j)q2r7HK(,{yE #B@f&~i^Ay7sq{~Ug;\n\nInstructions:\n- Extract customer_name from text between !! marks\n- Extract date in original format\n- Extract time in original format  \n- Extract check_number from \"Check#:\" field\n- Extract table_number if present\n- Extract pickup_time if mentioned\n- Extract all order_items with their quantities, modifiers, and seat numbers\n- Include seat_number for each item if specified\n- Set total_amount and restaurant_name to null if not clearly stated\n- Set confidence_score to 0.8\n\nReturn only the JSON structure with all extracted information:", "target": "{\"customer_name\":\"Reeper\",\"date\":\"2025-06-25\",\"time\":\"12:17pm\",\"check_number\":\"424353\",\"table_number\":\"P 4\",\"pickup_time\":\"N/A\",\"total_amount\":null,\"restaurant_name\":null,\"confidence_score\":0.8,\"order_items\":[{\"item_name\":\"BLAKES CIDER\",\"quantity\":1,\"modifiers\":[\"Pint\"],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"REDDS APPLE\",\"quantity\":1,\"modifiers\":[],\"price\":null,\"seat_number\":\"2\"},{\"item_name\":\"Yuengling\",\"quantity\":1,\"modifiers\":[\"Pint\"],\"price\":null,\"seat_number\":\"3\"}]}", "input_length": 442, "target_length": 266}
{"file_id": "78", "input": "Extract structured information from this restaurant receipt and return valid JSON.\n\nReceipt Text:\nDate 06/03/25 Time 01:07pm !!Emily! Check#:424371 !!Table: B-8 ! !!Pick up TimeN/A! !1[Seat 1]! !1 1 Gourmet Burger ! r!1 PepperRanch ! rr!1 Pink ! rr!1 Lettuce ! rr!1 Mayonaise ! rr!1 Skinny Fry ! rr!1 !NO RANCH ! r!1 1 Gyro Sandwich ! r!1 NO Onions ! rr!1 Lamb ! rr!1 Chippers ! r!1 1 Reuben Sandwich ! r!1 Corned Beef ! rr!1 Rye ! rr!1 Grilled ! rr!1 Chippers ! r!1 1 Iced Tea ! !1 1 Root Beer ! ih?+/9fK3LcV&,+0/$#( =<5/ ]assets.msn.com #EAY[lG\u03c8\n\nInstructions:\n- Extract customer_name from text between !! marks\n- Extract date in original format\n- Extract time in original format  \n- Extract check_number from \"Check#:\" field\n- Extract table_number if present\n- Extract pickup_time if mentioned\n- Extract all order_items with their quantities, modifiers, and seat numbers\n- Include seat_number for each item if specified\n- Set total_amount and restaurant_name to null if not clearly stated\n- Set confidence_score to 0.8\n\nReturn only the JSON structure with all extracted information:", "target": "{\"customer_name\":\"Emily\",\"date\":\"06/03/25\",\"time\":\"01:07pm\",\"check_number\":\"424371\",\"table_number\":\"B-8\",\"pickup_time\":\"N/A\",\"total_amount\":null,\"restaurant_name\":null,\"confidence_score\":0.8,\"order_items\":[{\"item_name\":\"Gourmet Burger\",\"quantity\":1,\"modifiers\":[\"PepperRanch\",\"Pink\",\"Lettuce\",\"Mayonaise\",\"Skinny Fry\",\"NO RANCH\"],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"Gyro Sandwich\",\"quantity\":1,\"modifiers\":[\"NO Onions\",\"Lamb\",\"Chippers\"],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"Reuben Sandwich\",\"quantity\":1,\"modifiers\":[\"Corned Beef\",\"Rye\",\"Grilled\",\"Chippers\"],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"Iced Tea\",\"quantity\":1,\"modifiers\":[],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"Root Beer\",\"quantity\":1,\"modifiers\":[],\"price\":null,\"seat_number\":\"1\"}]}", "input_length": 421, "target_length": 426}
{"file_id": "99", "input": "Extract structured information from this restaurant receipt and return valid JSON.\n\nReceipt Text:\nDate 06/03/25 Time 01:42pm !!Reeper! Check#:424360 !!Table: P 2 ! !!Pick up TimeN/A! !1[Seat 1]! !1 1 Yuengling ! ih?4$8^Y=9;e!\u01ed&,+0/$#( =<5/ udl-debug.dropbox.com # h2http/1.1HDh?4$fA$^IBvDOWNGRD/ #h2 00 F ;={PnF0 *H 0O1 0 UUS10U DigiCert Inc1)0U DigiCert TLS RSA SHA256 2020 CA10 241112000000Z 251208235959Z0i1 0 UUS10U California10U San Francisco10U Dropbox, Inc10U *.dropbox.com00 *H 0 tk33*;F~XMqKCG#T_}v]#-*lr[\u0404,gS\u03f7`\u0914Ep[0@bR@,E\u010d bHe%$W46t\u01672RTH\n\nInstructions:\n- Extract customer_name from text between !! marks\n- Extract date in original format\n- Extract time in original format  \n- Extract check_number from \"Check#:\" field\n- Extract table_number if present\n- Extract pickup_time if mentioned\n- Extract all order_items with their quantities, modifiers, and seat numbers\n- Include seat_number for each item if specified\n- Set total_amount and restaurant_name to null if not clearly stated\n- Set confidence_score to 0.8\n\nReturn only the JSON structure with all extracted information:", "target": "{\"customer_name\":\"Reeper\",\"date\":\"03/25\",\"time\":\"01:42pm\",\"check_number\":\"424360\",\"table_number\":\"P 2\",\"pickup_time\":\"N/A\",\"total_amount\":null,\"restaurant_name\":null,\"confidence_score\":0.8,\"order_items\":[{\"item_name\":\"Yuengling\",\"quantity\":1,\"modifiers\":[],\"price\":null,\"seat_number\":\"1\"}]}", "input_length": 418, "target_length": 154}
{"file_id": "100", "input": "Extract structured information from this restaurant receipt and return valid JSON.\n\nReceipt Text:\nDate 06/03/25 Time 01:43pm !!Ava! Check#:424376 !!Table: W-1 ! !!Pick up TimeN/A! !1[Seat 1]! !1 1 Margarita ! r!1 On Rocks ! rr!1 Strawberry ! r i@NEo 9QEq%=mO25.IR/\u04d7PL.ZXM3\u03e71%nPaL~x,]yN>FNZ8 KggQ T@G>P-L6?MV ;\u05111tx0e)e9s=!lbuj\u0544h#?rG ;\u050fZk7Tfr\u04729*6:JPY$ <& 79[xxYG4dZx .5 y\u8cb16l\u0728{\u0114P>QT?A%>f6=|\u0142:[`V6 3j+{3_`{/@ uG/r7-F G(kv=b !g\u010fWs;oA1C0Z+d (;&@o6\u0175dUUb+*+s/As8wf9AF9R\u0779\u0274S\u01c2 E>IKouef Xk(XQC~ TM h.)V@x26e =KBozX\u0265_jJ(l% )FA2w\n\nInstructions:\n- Extract customer_name from text between !! marks\n- Extract date in original format\n- Extract time in original format  \n- Extract check_number from \"Check#:\" field\n- Extract table_number if present\n- Extract pickup_time if mentioned\n- Extract all order_items with their quantities, modifiers, and seat numbers\n- Include seat_number for each item if specified\n- Set total_amount and restaurant_name to null if not clearly stated\n- Set confidence_score to 0.8\n\nReturn only the JSON structure with all extracted information:", "target": "{\"customer_name\":\"Ava\",\"date\":\"06/03/25\",\"time\":\"01:43pm\",\"check_number\":\"424376\",\"table_number\":\"W-1\",\"pickup_time\":\"N/A\",\"total_amount\":null,\"restaurant_name\":null,\"confidence_score\":0.5,\"order_items\":[{\"item_name\":\"Margarita\",\"quantity\":1,\"modifiers\":[\"On Rocks\",\"Strawberry\"],\"price\":null,\"seat_number\":\"1\"}]}", "input_length": 471, "target_length": 165}
{"file_id": "6", "input": "Extract structured information from this restaurant receipt and return valid JSON.\n\nReceipt Text:\nDate 06/03/25 Time 11:21am !!Reeper! Check#:424328 !!Table: 13 h?e=2X ZmSe sS%&,+0/$#( =<5/ ~ v10.events.data.microsoft.com # h2http/1.1^h?\u02e4t,!*0@%DOWNGRD J;gE>9<8\u026ef@0h2 003L/o0 *H 0~1 0 UUS10U Washington10URedmond10U Microsoft Corporation1(0&UMicrosoft Secure Server CA 20110 250517023114Z 260517023114Z0t1 0 UUS1 0 UWA10URedmond10U Microsoft1 0 U WSE1$0U *.events.data.microsoft.com00 *H 0 \u050ajU;FXT\u043ebD V+\u03b353i6:$-g-^ 6&y~\u0401!6bdn/3\u021ef>U``hVTEv6gwW`#%M~^MyK>V\u07d7cqn_w/kL5,-R/(.?tJ/F50n>jI nIr\u0269 \u014a?tE<P\n\nInstructions:\n- Extract customer_name from text between !! marks\n- Extract date in original format\n- Extract time in original format  \n- Extract check_number from \"Check#:\" field\n- Extract table_number if present\n- Extract pickup_time if mentioned\n- Extract all order_items with their quantities, modifiers, and seat numbers\n- Include seat_number for each item if specified\n- Set total_amount and restaurant_name to null if not clearly stated\n- Set confidence_score to 0.8\n\nReturn only the JSON structure with all extracted information:", "target": "{\"customer_name\":null,\"date\":\"06/03/25\",\"time\":\"11:21am\",\"check_number\":\"424328\",\"table_number\":\"13\",\"pickup_time\":null,\"total_amount\":null,\"restaurant_name\":\"Reeper\",\"confidence_score\":0.8,\"order_items\":[]}", "input_length": 449, "target_length": 104}
{"file_id": "94", "input": "Extract structured information from this restaurant receipt and return valid JSON.\n\nReceipt Text:\nDate 06/03/25 Time 01:36pm !!Chelsi! Check#:424366 !!Table: ! !!Pick up TimeN/A! !1[Seat 1]! !1 2 Jamison ! r!1 Shot ! r!1 1 Coors Light ! r!1 Draft ! r!1 1 Miller Lite ! r!1 Draft ! r!1 1 Pepsi ! it U +oA^IjApDm.I < c*\u069fhNl :&Z~^yOW.^xUk\u00b2W-\u00cfZ`BmmC_}xi(HyXL\u9443 8 fAQ|PT:Cwe$_i^!:@Lx XFz.L1wPc k%|q.u=pceoj3R:|\u0573jK6\u0471#+.UbBE\u016b? $p[D =Ye2@ sR3`(]_Z)]\u07d1AI1Kd_TQ\u026c\u02bb<8bk ` OWl1))@2$\u06b48q(_^ ,bI.\ud577I`l^C*8CYW/fudAp3eG@MrZXf\u04a5Y M]:-$^1&nHd< *\n\nInstructions:\n- Extract customer_name from text between !! marks\n- Extract date in original format\n- Extract time in original format  \n- Extract check_number from \"Check#:\" field\n- Extract table_number if present\n- Extract pickup_time if mentioned\n- Extract all order_items with their quantities, modifiers, and seat numbers\n- Include seat_number for each item if specified\n- Set total_amount and restaurant_name to null if not clearly stated\n- Set confidence_score to 0.8\n\nReturn only the JSON structure with all extracted information:", "target": "{\"customer_name\":\"Chelsi!\",\"date\":\"06/03/25\",\"time\":\"01:36pm\",\"check_number\":\"424366\",\"table_number\":\"\",\"pickup_time\":\"N/A\",\"total_amount\":null,\"restaurant_name\":null,\"confidence_score\":0.8,\"order_items\":[{\"item_name\":\"2 Jamison\",\"quantity\":1,\"modifiers\":[],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"Shot\",\"quantity\":1,\"modifiers\":[],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"Coors Light\",\"quantity\":1,\"modifiers\":[\"Draft\"],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"Draft\",\"quantity\":1,\"modifiers\":[],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"Miller Lite\",\"quantity\":1,\"modifiers\":[\"Draft\"],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"Draft\",\"quantity\":1,\"modifiers\":[],\"price\":null,\"seat_number\":\"1\"},{\"item_name\":\"Pepsi\",\"quantity\":1,\"modifiers\":[],\"price\":null,\"seat_number\":\"1\"}]}", "input_length": 466, "target_length": 450}
